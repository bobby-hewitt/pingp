{"ast":null,"code":"function subscribeToHostEvents(self, socket, cb) {// socket.on('room-code-generated', roomCodeGenerated.bind(this, cb))\n  //  \tsocket.on('update-players', updatePlayers.bind(this, cb))\n  // socket.on('chosen-game', chosenGame.bind(this, self, socket))\n}\n\nfunction showQuestion(self, socket) {\n  self.props.showQuestion();\n  var data = {\n    room: self.props.room,\n    question: self.props.currentQuestion\n  };\n  socket.emit();\n} // function chosenGame(self, nothing, data){\n// \tconsole.log(data)\n// \tself.props.push('h/' + data)\n// }\n// function roomCodeGenerated(cb, data){\n// \tcb('setRoomCode', data)\n// }\n// function updatePlayers(cb, data){\n// \tconsole.log('updateing players', data)\n// \tcb('updatePlayers', data)\n// }\n\n\nexport { showQuestion, subscribeToHostEvents };","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/sockets/Quiz/host.js"],"names":["subscribeToHostEvents","self","socket","cb","showQuestion","props","data","room","question","currentQuestion","emit"],"mappings":"AAAA,SAASA,qBAAT,CAA+BC,IAA/B,EAAqCC,MAArC,EAA6CC,EAA7C,EAAiD,CAChD;AACA;AACA;AACA;;AAGD,SAASC,YAAT,CAAsBH,IAAtB,EAA4BC,MAA5B,EAAmC;AAClCD,EAAAA,IAAI,CAACI,KAAL,CAAWD,YAAX;AACA,MAAIE,IAAI,GAAG;AACVC,IAAAA,IAAI,EAAEN,IAAI,CAACI,KAAL,CAAWE,IADP;AAEVC,IAAAA,QAAQ,EAAEP,IAAI,CAACI,KAAL,CAAWI;AAFX,GAAX;AAIAP,EAAAA,MAAM,CAACQ,IAAP;AACA,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,SACCN,YADD,EAECJ,qBAFD","sourcesContent":["function subscribeToHostEvents(self, socket, cb) {\n\t// socket.on('room-code-generated', roomCodeGenerated.bind(this, cb))\n //  \tsocket.on('update-players', updatePlayers.bind(this, cb))\n\t// socket.on('chosen-game', chosenGame.bind(this, self, socket))\n}\n\n\nfunction showQuestion(self, socket){\n\tself.props.showQuestion()\n\tlet data = {\n\t\troom: self.props.room,\n\t\tquestion: self.props.currentQuestion,\n\t}\n\tsocket.emit()\n}\n\n// function chosenGame(self, nothing, data){\n// \tconsole.log(data)\n// \tself.props.push('h/' + data)\n// }\n\n// function roomCodeGenerated(cb, data){\n// \tcb('setRoomCode', data)\n// }\n\n// function updatePlayers(cb, data){\n// \tconsole.log('updateing players', data)\n// \tcb('updatePlayers', data)\n// }\n\nexport {\n\tshowQuestion,\n\tsubscribeToHostEvents,\n};"]},"metadata":{},"sourceType":"module"}