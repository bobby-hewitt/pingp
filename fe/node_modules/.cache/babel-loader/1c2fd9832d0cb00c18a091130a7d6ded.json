{"ast":null,"code":"import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from './reducers';\nimport thunk from 'redux-thunk';\nexport var history = createBrowserHistory();\nvar initialState = {};\nvar enhancers = [];\nvar middleware = [thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === 'development') {\n  var devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nvar composedEnhancers = compose.apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers));\nvar store = createStore(createRootReducer(history), // root reducer with router state\ninitialState, composedEnhancers);\nexport default store;","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/store.js"],"names":["createBrowserHistory","applyMiddleware","compose","createStore","routerMiddleware","createRootReducer","thunk","history","initialState","enhancers","middleware","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","push","composedEnhancers","store"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,SAArC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,iBAAP,MAA8B,YAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,OAAO,IAAMC,OAAO,GAAGP,oBAAoB,EAApC;AAEP,IAAMQ,YAAY,GAAG,EAArB;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAMC,UAAU,GAAG,CACjBJ,KADiB,EAEjBF,gBAAgB,CAACG,OAAD,CAFC,CAAnB;;AAKA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,4BAAjC;;AACA,MAAI,OAAOF,iBAAP,KAA6B,UAAjC,EAA6C;AAC3CL,IAAAA,SAAS,CAACQ,IAAV,CAAeH,iBAAiB,EAAhC;AACD;AACF;;AAED,IAAMI,iBAAiB,GAAGhB,OAAO,MAAP,UACxBD,eAAe,MAAf,SAAmBS,UAAnB,CADwB,SAErBD,SAFqB,EAA1B;AAOA,IAAMU,KAAK,GAAGhB,WAAW,CACvBE,iBAAiB,CAACE,OAAD,CADM,EACK;AAC5BC,YAFuB,EAGvBU,iBAHuB,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createBrowserHistory } from 'history'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport createRootReducer from './reducers'\nimport thunk from 'redux-thunk'\n\n\nexport const history = createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [\n  thunk,\n  routerMiddleware(history)\n]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\n\n\nconst store = createStore(\n  createRootReducer(history), // root reducer with router state\n  initialState,\n  composedEnhancers\n)\n\nexport default store\n\n"]},"metadata":{},"sourceType":"module"}