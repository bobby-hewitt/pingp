{"ast":null,"code":"import _objectSpread from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  questions: [],\n  questionIndex: 0,\n  players: [],\n  currentQuestion: null,\n  quizState: 'break'\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'QUIZ_SETUP_GAME_HOST':\n      return _objectSpread({}, state, {\n        questions: action.payload.questions,\n        currentQuestion: action.payload.questions[0],\n        players: action.payload.players\n      });\n\n    case 'QUIZ_SHOW_QUESTION_HOST':\n      //handles the end of the quiz\n      if (state.currentIndex <= state.questions.length) {\n        return _objectSpread({}, state, {\n          quizState: 'end'\n        });\n      } else {\n        //move on to the next question\n        return _objectSpread({}, state, {\n          currentQuestion: state.questions[state.questionIndex],\n          quizState: \"question\"\n        });\n      }\n\n    case 'QUIZ_SHOW_ANSWER_HOST':\n      return _objectSpread({}, state);\n\n    case 'QUIZ_SHOW_SCORES_HOST':\n      //need to update questiobn index\n      return _objectSpread({}, state);\n\n    case 'QUIZ_SET_RESPONSE_HOST':\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/reducers/Quiz/host.js"],"names":["initialState","questions","questionIndex","players","currentQuestion","quizState","state","action","type","payload","currentIndex","length"],"mappings":";AACA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,aAAa,EAAE,CAFI;AAGnBC,EAAAA,OAAO,EAAE,EAHU;AAInBC,EAAAA,eAAe,EAAE,IAJE;AAKnBC,EAAAA,SAAS,EAAE;AALQ,CAArB;AAQA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,+BACKF,KADL;AAEEL,QAAAA,SAAS,EAAEM,MAAM,CAACE,OAAP,CAAeR,SAF5B;AAGEG,QAAAA,eAAe,EAAEG,MAAM,CAACE,OAAP,CAAeR,SAAf,CAAyB,CAAzB,CAHnB;AAIEE,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAJ1B;;AAMF,SAAK,yBAAL;AACE;AACA,UAAIG,KAAK,CAACI,YAAN,IAAsBJ,KAAK,CAACL,SAAN,CAAgBU,MAA1C,EAAiD;AAC/C,iCACOL,KADP;AAEID,UAAAA,SAAS,EAAC;AAFd;AAID,OALD,MAMK;AACH;AACA,iCACKC,KADL;AAEEF,UAAAA,eAAe,EAAEE,KAAK,CAACL,SAAN,CAAgBK,KAAK,CAACJ,aAAtB,CAFnB;AAGEG,UAAAA,SAAS,EAAE;AAHb;AAKD;;AACH,SAAK,uBAAL;AACE,+BACKC,KADL;;AAGF,SAAK,uBAAL;AACA;AACE,+BACKA,KADL;;AAGF,SAAK,wBAAL;AACE,+BACKA,KADL;;AAGF;AACE,aAAOA,KAAP;AAtCJ;AAwCD,CAzCD","sourcesContent":["\nconst initialState = {\n  questions: [],\n  questionIndex: 0,\n  players: [],\n  currentQuestion: null,\n  quizState: 'break'\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'QUIZ_SETUP_GAME_HOST':\n      return {\n        ...state,\n        questions: action.payload.questions,\n        currentQuestion: action.payload.questions[0],\n        players: action.payload.players,\n      }\n    case 'QUIZ_SHOW_QUESTION_HOST':\n      //handles the end of the quiz\n      if (state.currentIndex <= state.questions.length){\n        return {\n            ...state,\n            quizState:'end'\n        }\n      }\n      else {\n        //move on to the next question\n        return {\n          ...state,\n          currentQuestion: state.questions[state.questionIndex],  \n          quizState: \"question\"\n        }\n      }\n    case 'QUIZ_SHOW_ANSWER_HOST':\n      return {\n        ...state \n      }\n    case 'QUIZ_SHOW_SCORES_HOST':\n    //need to update questiobn index\n      return {\n        ...state \n      }\n    case 'QUIZ_SET_RESPONSE_HOST':\n      return {\n        ...state,\n      }\n    default:\n      return state\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}