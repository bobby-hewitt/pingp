{"ast":null,"code":"import _classCallCheck from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bobby.hewitt/Documents/test/ops/fe/src/containers/Quiz/Host/index.js\";\nimport React, { Component } from 'react';\nimport { push as _push } from 'connected-react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { setupGame } from 'actions/quiz';\nimport './style.scss';\nimport Question from './Question';\n\nvar QuizHost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizHost, _Component);\n\n  function QuizHost(props) {\n    var _this;\n\n    _classCallCheck(this, QuizHost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizHost).call(this, props));\n    _this.timeouts = {};\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(QuizHost, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setupGame();\n    }\n  }, {\n    key: \"setupGame\",\n    value: function setupGame() {\n      var _this2 = this;\n\n      fetch('https://opentdb.com/api.php?amount=10&type=multiple').then(function (resp) {\n        return resp.json();\n      }) // Transform the data into json\n      .then(function (data) {\n        console.log('got data', data.results); // give players scores\n\n        var playersWithScores = [];\n\n        for (var i = 0; i < _this2.props.players.length; i++) {\n          var player = {\n            id: _this2.props.players[i].id,\n            name: _this2.props.players[i].name,\n            score: 0\n          };\n          playersWithScores.push(player);\n        } //shuffle wrong answers with correct ones\n\n\n        for (var i = 0; i < data.results.length; i++) {\n          var q = data.results[i];\n          console.log(q);\n        }\n\n        var obj = {\n          questions: data.results,\n          players: playersWithScores\n        };\n        console.log('calling setup');\n\n        _this2.props.setupGame(obj);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var currentQuestion = this.props.currentQuestion;\n      return React.createElement(\"div\", {\n        className: \"quizHostContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.quizState === 'break' && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Break\"), this.props.quizState === 'question' && React.createElement(Question, {\n        question: currentQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), this.props.quizState === 'answer' && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Answer\"), this.props.quizState === 'end' && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"End\"));\n    }\n  }]);\n\n  return QuizHost;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    roomCode: state.generalHost.room,\n    players: state.generalHost.players,\n    router: state.router,\n    quizPlayers: state.quiz.players,\n    currentQuestion: state.quiz.currentQuestion,\n    quizState: state.quiz.quizState\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    push: function push(path) {\n      return _push(path);\n    },\n    setupGame: setupGame\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizHost);","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/containers/Quiz/Host/index.js"],"names":["React","Component","push","bindActionCreators","connect","setupGame","Question","QuizHost","props","timeouts","state","fetch","then","resp","json","data","console","log","results","playersWithScores","i","players","length","player","id","name","score","q","obj","questions","currentQuestion","quizState","mapStateToProps","roomCode","generalHost","room","router","quizPlayers","quiz","mapDispatchToProps","dispatch","path"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { setupGame } from 'actions/quiz'\nimport './style.scss'\nimport Question from './Question'\nclass QuizHost extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.timeouts = {\n\n\t\t}\n\t\tthis.state = {\n\n\t\t}\n\t}\n\n\tcomponentWillMount(){\n\t\tthis.setupGame()\n\t}\n\n\tsetupGame(){\n\t\tfetch('https://opentdb.com/api.php?amount=10&type=multiple')\n\t\t.then((resp) => resp.json()) // Transform the data into json\n\t\t.then((data) => {\n\t\t\tconsole.log('got data', data.results)\n\t\t\t\t\n\t\t\t\t// give players scores\n\t\t\t\tlet playersWithScores = []\n\t\t\t\tfor (var i = 0; i < this.props.players.length; i++){\n\t\t\t\t\tlet player = {\n\t\t\t\t\t\tid: this.props.players[i].id,\n\t\t\t\t\t\tname: this.props.players[i].name,\n\t\t\t\t\t\tscore: 0\n\t\t\t\t\t}\n\t\t\t\t\tplayersWithScores.push(player)\n\t\t\t\t}\n\t\t\t\t//shuffle wrong answers with correct ones\n\t\t\t\tfor (var i = 0; i < data.results.length; i++){\n\n\t\t\t\t\tlet q = data.results[i]\n\t\t\t\t\tconsole.log(q)\n\t\t\t\t}\n\t\t\t\tlet obj = {\n\t\t\t\t\tquestions: data.results,\n\t\t\t\t\tplayers: playersWithScores\n\t\t\t\t}\n\t\t\t\tconsole.log('calling setup')\n\t\t\t\tthis.props.setupGame(obj)\n\t\t\n\t\t})\n\t}\n\n\n\n\trender(){\n\t\tconsole.log(this.props)\n\t\tconst { currentQuestion } = this.props\n\t\treturn(\n\t\t\t<div className=\"quizHostContainer\">\n\t\t\t\t{this.props.quizState === 'break' &&\n\t\t\t\t\t<p>Break</p>\n\t\t\t\t}\n\t\t\t\t{this.props.quizState === 'question' &&\n\t\t\t\t\t<Question question={currentQuestion}/>\n\t\t\t\t}\n\t\t\t\t{this.props.quizState === 'answer' &&\n\t\t\t\t\t<p>Answer</p>\n\t\t\t\t}\n\t\t\t\t{this.props.quizState === 'end' &&\n\t\t\t\t\t<p>End</p>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nconst mapStateToProps = state => ({\n\troomCode: state.generalHost.room,\n\tplayers: state.generalHost.players,\n\trouter: state.router,\n\tquizPlayers: state.quiz.players,\n\tcurrentQuestion: state.quiz.currentQuestion,\n\tquizState: state.quiz.quizState,\n\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  push: (path) => push(path),\n  setupGame\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuizHost)"]},"metadata":{},"sourceType":"module"}