{"ast":null,"code":"import openSocket from 'socket.io-client';\nimport localSetup from 'config/local';\nvar socket = localSetup.isLocal ? openSocket(localSetup.localServer + ':9000') : openSocket(localSetup.publicServer);\nvar POWER_UP_DURATION = 5000;\n\nfunction subscribeToHostEvents(self, cb) {\n  console.log('SUBSCRIBING TO HOST');\n  socket.emit('host-connected');\n  socket.on('room-code-generated', roomCodeGenerated.bind(this, cb));\n  socket.on('player-joined', playerJoined.bind(this, cb)); // socket.on('start-round', startRound.bind(this, self))\n\n  socket.on('start-game', startGame.bind(this, cb));\n  socket.on('player-responded', playerResponded.bind(this, self));\n  socket.on('device-orientation-sending', gotCoords.bind(this, cb));\n  socket.on('quit-game-player', quitGamePlayer.bind(this, cb));\n  socket.on('restart-game', restartGame.bind(this, cb));\n  socket.on('power-up-used', powerUpUsed.bind(this, self));\n}\n\nfunction powerUpUsed(self, data) {\n  // console.log('POWER UP USED', data, self)\n  self.props.powerUpUsedGameplay(data);\n}\n\nfunction powerUpGained(data, self) {\n  console.log('emitting');\n  socket.emit('power-up-gained', data);\n}\n\nfunction gotCoords(cb, data) {\n  if (data.coords.playerNumber === 1) {\n    cb('setCoords1', data);\n  } else {\n    cb('setCoords2', data);\n  } // console.log('receiving coords', data)\n  // cb('setCoords1', data)\n\n}\n\nfunction restartGame(cb) {\n  cb('setGameOver', false);\n}\n\nfunction quitGamePlayer() {\n  window.location.reload();\n}\n\nfunction startGame(cb) {\n  console.log('receiving start gaem');\n  cb('startGame');\n}\n\nfunction roomCodeGenerated(cb, data) {\n  console.log('setting roomcode', data);\n  cb('setRoomCode', data);\n}\n\nfunction gameOver(self, winner) {\n  self.props.setGameOver(true);\n  socket.emit('game-over', winner);\n} // function startRound(self){\n// \tself.props.startRound()\n// }\n\n\nfunction playerJoined(cb, data) {\n  console.log('player joined', data);\n  cb('addPlayer', data); // console.log('player joined', data)\n}\n\nfunction startRound(self, cb) {\n  socket.emit('start-round');\n}\n\nfunction playerResponded(self, data) {\n  console.log('player response');\n  self.props.setResponses(data);\n}\n\nexport { powerUpGained, gameOver, subscribeToHostEvents, startRound };","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/sockets/host.js"],"names":["openSocket","localSetup","socket","isLocal","localServer","publicServer","POWER_UP_DURATION","subscribeToHostEvents","self","cb","console","log","emit","on","roomCodeGenerated","bind","playerJoined","startGame","playerResponded","gotCoords","quitGamePlayer","restartGame","powerUpUsed","data","props","powerUpUsedGameplay","powerUpGained","coords","playerNumber","window","location","reload","gameOver","winner","setGameOver","startRound","setResponses"],"mappings":"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","sourcesContent":["import openSocket from 'socket.io-client';\nimport localSetup from 'config/local'\nconst socket = localSetup.isLocal ? openSocket(localSetup.localServer+ ':9000') : openSocket(localSetup.publicServer)\n\nconst POWER_UP_DURATION = 5000\nfunction subscribeToHostEvents(self, cb) {\n\tconsole.log('SUBSCRIBING TO HOST')\n\tsocket.emit('host-connected');\n\tsocket.on('room-code-generated', roomCodeGenerated.bind(this, cb))\n  \tsocket.on('player-joined', playerJoined.bind(this, cb))\n  \t// socket.on('start-round', startRound.bind(this, self))\n  \tsocket.on('start-game', startGame.bind(this, cb))\n  \tsocket.on('player-responded', playerResponded.bind(this, self))\n  \tsocket.on('device-orientation-sending', gotCoords.bind(this, cb))\n  \tsocket.on('quit-game-player', quitGamePlayer.bind(this, cb))\n  \tsocket.on('restart-game', restartGame.bind(this, cb))\n  \tsocket.on('power-up-used', powerUpUsed.bind(this, self))\n  \t\n}\n\nfunction powerUpUsed(self, data){\n\t// console.log('POWER UP USED', data, self)\n\tself.props.powerUpUsedGameplay(data)\n}\n\nfunction powerUpGained(data, self){\n\tconsole.log('emitting')\n\tsocket.emit('power-up-gained', data)\n}\n\nfunction gotCoords(cb, data){\n\tif (data.coords.playerNumber === 1){\n\t\tcb('setCoords1', data)\n\t} else {\n\t\tcb('setCoords2', data)\n\t}\n\t// console.log('receiving coords', data)\n\t// cb('setCoords1', data)\n}\n\nfunction restartGame(cb){\n\tcb('setGameOver', false)\n}\n\nfunction quitGamePlayer(){\n\twindow.location.reload()\n}\n\nfunction startGame(cb){\n\tconsole.log('receiving start gaem')\n\tcb('startGame')\n}\n\nfunction roomCodeGenerated(cb, data){\n\tconsole.log('setting roomcode', data)\n\tcb('setRoomCode', data)\n}\n\nfunction gameOver(self, winner){\n\tself.props.setGameOver(true)\n\tsocket.emit('game-over', winner)\n}\n\n// function startRound(self){\n// \tself.props.startRound()\n// }\n\nfunction playerJoined(cb, data){\n\tconsole.log('player joined', data)\n\tcb('addPlayer', data)\n\t// console.log('player joined', data)\n}\n\nfunction startRound(self, cb){\n\tsocket.emit('start-round');\n}\n\nfunction playerResponded(self, data){\n\tconsole.log('player response')\n\tself.props.setResponses(data)\n\n}\n\nexport { \n\tpowerUpGained,\n\tgameOver,\n\tsubscribeToHostEvents,\n\tstartRound\n};"]},"metadata":{},"sourceType":"module"}