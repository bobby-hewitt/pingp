{"ast":null,"code":"import _classCallCheck from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bobby.hewitt/Documents/test/ops/fe/src/containers/Quiz/Host/index.js\";\nimport React, { Component } from 'react';\nimport { push as _push } from 'connected-react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { setupGame } from 'actions/quiz';\nimport './style.scss';\nimport Question from './Question';\n\nvar QuizHost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizHost, _Component);\n\n  function QuizHost(props) {\n    var _this;\n\n    _classCallCheck(this, QuizHost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizHost).call(this, props));\n    _this.timeouts = {};\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(QuizHost, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setupGame();\n    }\n  }, {\n    key: \"shuffle\",\n    value: function shuffle(array) {\n      var currentIndex = array.length,\n          temporaryValue,\n          randomIndex; // While there remain elements to shuffle...\n\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1; // And swap it with the current element.\n\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    }\n  }, {\n    key: \"setupGame\",\n    value: function setupGame() {\n      var _this2 = this;\n\n      fetch('https://opentdb.com/api.php?amount=10&type=multiple').then(function (resp) {\n        return resp.json();\n      }) // Transform the data into json\n      .then(function (data) {\n        console.log('got data', data.results); // give players scores\n\n        var playersWithScores = [];\n\n        for (var i = 0; i < _this2.props.players.length; i++) {\n          var player = {\n            id: _this2.props.players[i].id,\n            name: _this2.props.players[i].name,\n            score: 0\n          };\n          playersWithScores.push(player);\n        } //shuffle wrong answers with correct ones\n\n\n        for (var i = 0; i < data.results.length; i++) {\n          var q = data.results[i];\n          q.all_answers = Object.assign([], q.incorrect_answers);\n          q.all_answers = shuffle(q.all_answers.push(q.correct_answer));\n          console.log(q);\n        }\n\n        var obj = {\n          questions: data.results,\n          players: playersWithScores\n        };\n        console.log('calling setup');\n\n        _this2.props.setupGame(obj);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var currentQuestion = this.props.currentQuestion;\n      return React.createElement(\"div\", {\n        className: \"quizHostContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.props.quizState === 'break' && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Break\"), this.props.quizState === 'question' && React.createElement(Question, {\n        question: currentQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), this.props.quizState === 'answer' && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Answer\"), this.props.quizState === 'end' && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"End\"));\n    }\n  }]);\n\n  return QuizHost;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    roomCode: state.generalHost.room,\n    players: state.generalHost.players,\n    router: state.router,\n    quizPlayers: state.quiz.players,\n    currentQuestion: state.quiz.currentQuestion,\n    quizState: state.quiz.quizState\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    push: function push(path) {\n      return _push(path);\n    },\n    setupGame: setupGame\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizHost);","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/containers/Quiz/Host/index.js"],"names":["React","Component","push","bindActionCreators","connect","setupGame","Question","QuizHost","props","timeouts","state","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","fetch","then","resp","json","data","console","log","results","playersWithScores","i","players","player","id","name","score","q","all_answers","Object","assign","incorrect_answers","shuffle","correct_answer","obj","questions","currentQuestion","quizState","mapStateToProps","roomCode","generalHost","room","router","quizPlayers","quiz","mapDispatchToProps","dispatch","path"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { setupGame } from 'actions/quiz'\nimport './style.scss'\nimport Question from './Question'\nclass QuizHost extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.timeouts = {\n\n\t\t}\n\t\tthis.state = {\n\n\t\t}\n\t}\n\n\tcomponentWillMount(){\n\t\tthis.setupGame()\n\t}\n\n\tshuffle(array) {\n\t  var currentIndex = array.length, temporaryValue, randomIndex;\n\n\t  // While there remain elements to shuffle...\n\t  while (0 !== currentIndex) {\n\n\t    // Pick a remaining element...\n\t    randomIndex = Math.floor(Math.random() * currentIndex);\n\t    currentIndex -= 1;\n\n\t    // And swap it with the current element.\n\t    temporaryValue = array[currentIndex];\n\t    array[currentIndex] = array[randomIndex];\n\t    array[randomIndex] = temporaryValue;\n\t  }\n\n\t  return array;\n\t}\n\n\tsetupGame(){\n\t\tfetch('https://opentdb.com/api.php?amount=10&type=multiple')\n\t\t.then((resp) => resp.json()) // Transform the data into json\n\t\t.then((data) => {\n\t\t\tconsole.log('got data', data.results)\n\t\t\t\t\n\t\t\t\t// give players scores\n\t\t\t\tlet playersWithScores = []\n\t\t\t\tfor (var i = 0; i < this.props.players.length; i++){\n\t\t\t\t\tlet player = {\n\t\t\t\t\t\tid: this.props.players[i].id,\n\t\t\t\t\t\tname: this.props.players[i].name,\n\t\t\t\t\t\tscore: 0\n\t\t\t\t\t}\n\t\t\t\t\tplayersWithScores.push(player)\n\t\t\t\t}\n\t\t\t\t//shuffle wrong answers with correct ones\n\t\t\t\tfor (var i = 0; i < data.results.length; i++){\n\t\t\t\t\tlet q = data.results[i]\n\t\t\t\t\tq.all_answers = Object.assign([], q.incorrect_answers)\n\t\t\t\t\tq.all_answers = shuffle(q.all_answers.push(q.correct_answer))\n\t\t\t\t\tconsole.log(q)\n\t\t\t\t}\n\t\t\t\tlet obj = {\n\t\t\t\t\tquestions: data.results,\n\t\t\t\t\tplayers: playersWithScores\n\t\t\t\t}\n\t\t\t\tconsole.log('calling setup')\n\t\t\t\tthis.props.setupGame(obj)\n\t\t\n\t\t})\n\t}\n\n\n\n\trender(){\n\t\tconsole.log(this.props)\n\t\tconst { currentQuestion } = this.props\n\t\treturn(\n\t\t\t<div className=\"quizHostContainer\">\n\t\t\t\t{this.props.quizState === 'break' &&\n\t\t\t\t\t<p>Break</p>\n\t\t\t\t}\n\t\t\t\t{this.props.quizState === 'question' &&\n\t\t\t\t\t<Question question={currentQuestion}/>\n\t\t\t\t}\n\t\t\t\t{this.props.quizState === 'answer' &&\n\t\t\t\t\t<p>Answer</p>\n\t\t\t\t}\n\t\t\t\t{this.props.quizState === 'end' &&\n\t\t\t\t\t<p>End</p>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nconst mapStateToProps = state => ({\n\troomCode: state.generalHost.room,\n\tplayers: state.generalHost.players,\n\trouter: state.router,\n\tquizPlayers: state.quiz.players,\n\tcurrentQuestion: state.quiz.currentQuestion,\n\tquizState: state.quiz.quizState,\n\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  push: (path) => push(path),\n  setupGame\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuizHost)"]},"metadata":{},"sourceType":"module"}