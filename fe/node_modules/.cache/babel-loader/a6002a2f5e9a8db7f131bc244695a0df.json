{"ast":null,"code":"import _classCallCheck from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bobby.hewitt/Documents/test/ops/fe/src/containers/Quiz/Mobile/index.js\";\nimport React, { Component } from 'react';\nimport SocketListener from 'containers/SocketListener/Quiz';\nimport Button from 'components/Button';\nimport { push as _push } from 'connected-react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { sendResponse } from 'sockets/Quiz/player';\nimport { setWaitingPlayer } from 'actions/quiz/player';\nimport './style.scss';\n\nvar QuizMobile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizMobile, _Component);\n\n  function QuizMobile() {\n    _classCallCheck(this, QuizMobile);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(QuizMobile).apply(this, arguments));\n  }\n\n  _createClass(QuizMobile, [{\n    key: \"onClick\",\n    value: function onClick(index) {\n      var obj = {\n        time: new Date().getTime(),\n        response: index,\n        id: this.props.socketId,\n        room: this.props.room,\n        name: this.props.name,\n        correct: index === this.props.question.correct_index\n      };\n      sendResponse(this, obj, this.props.socket);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (!this.props.room) {\n        this.props.push('/m/join');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: \"quizMobileContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(SocketListener, {\n        socket: this.props.socket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), this.props.question && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"mobileQuestion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.question.question), this.props.question.all_answers.map(function (answer, i) {\n        return React.createElement(Button, {\n          key: i,\n          text: answer,\n          onClick: _this.onClick.bind(_this, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return QuizMobile;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    socketId: state.generalPlayer.id,\n    room: state.generalPlayer.room,\n    players: state.generalHost.players,\n    name: state.generalPlayer.name,\n    router: state.router,\n    quizPlayers: state.quizHost.players,\n    currentQuestion: state.quizHost.currentQuestion,\n    question: state.quizPlayer.question\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    push: function push(path) {\n      return _push(path);\n    },\n    setWaitingPlayer: setWaitingPlayer\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizMobile);","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/containers/Quiz/Mobile/index.js"],"names":["React","Component","SocketListener","Button","push","bindActionCreators","connect","sendResponse","setWaitingPlayer","QuizMobile","index","obj","time","Date","getTime","response","id","props","socketId","room","name","correct","question","correct_index","socket","all_answers","map","answer","i","onClick","bind","mapStateToProps","state","generalPlayer","players","generalHost","router","quizPlayers","quizHost","currentQuestion","quizPlayer","mapDispatchToProps","dispatch","path"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport SocketListener from 'containers/SocketListener/Quiz'\nimport Button from 'components/Button'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { sendResponse } from 'sockets/Quiz/player'\nimport { setWaitingPlayer } from 'actions/quiz/player'\nimport './style.scss'\n\nclass QuizMobile extends Component {\n\n\tonClick(index){\n\t\tlet obj = {\n\t\t\ttime: (new Date()).getTime(),\n\t\t\tresponse: index,\n\t\t\tid: this.props.socketId,\n\t\t\troom: this.props.room,\n\t\t\tname: this.props.name,\n\t\t\tcorrect: index === this.props.question.correct_index\n\t\t}\n\t\tsendResponse(this, obj, this.props.socket)\n\t}\n\n\tcomponentWillMount(){\n\t\tif (!this.props.room){\n\t\t\tthis.props.push('/m/join')\n\t\t}\n\t}\n\n\trender(){\n\t\t\n\t\treturn(\n\t\t\t<div className=\"quizMobileContainer\">\n\t\t\t\t<SocketListener socket={this.props.socket} />\n\t\t\t\t\n\t\t\t\t{this.props.question && \n\t\t\t\t\t<div>\n\t\t\t\t\t<p className=\"mobileQuestion\">{this.props.question.question}</p>\n\t\t\t\t\t{this.props.question.all_answers.map((answer, i) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<Button key={i} text={answer} onClick={this.onClick.bind(this, i)}/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nconst mapStateToProps = state => ({\n\tsocketId: state.generalPlayer.id,\n\troom: state.generalPlayer.room,\n\tplayers: state.generalHost.players,\n\tname: state.generalPlayer.name,\n\trouter: state.router,\n\tquizPlayers: state.quizHost.players,\n\tcurrentQuestion: state.quizHost.currentQuestion,\n\tquestion: state.quizPlayer.question,\n\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  push: (path) => push(path),\n  setWaitingPlayer,\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuizMobile)"]},"metadata":{},"sourceType":"module"}