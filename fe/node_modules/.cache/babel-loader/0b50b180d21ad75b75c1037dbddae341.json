{"ast":null,"code":"import openSocket from 'socket.io-client';\nimport localSetup from 'config/local';\n\nfunction subscribeToPlayerEvents(self, socket, cb) {\n  console.log('SUBSCRIBING TO PLAYER PINGP');\n  socket.on('start-game', gameStarted.bind(this, cb, socket));\n  socket.on('restart-game', restartGame.bind(this, cb, socket));\n  socket.on('game-over', gameOver.bind(this, self, socket)); // socket.on('power-up-gained', powerUpGained.bind(this, self))\n}\n\nfunction gameOver(self, data) {\n  self.props.setGameOver(true, data); // cb('setGameOver', true)\n}\n\nfunction sendOrientation(coords, self, socket) {\n  self.props.push('/inthefunction');\n\n  if (self.props.room) {\n    var data = {\n      room: self.props.room,\n      coords: coords\n    };\n    emit('device-orientation', data, socket);\n  }\n}\n\nfunction restartGame(cb) {\n  cb('setGameOver', false);\n}\n\nfunction startGameSocket(self, socket) {\n  self.props.startGame();\n  emit('start-game', self.props.room.long);\n}\n\nfunction quitGameSocket(self, sockt) {\n  self.props.startGame();\n  emit('quit-game-player', self.props.room.long);\n}\n\nfunction restartGameSocket(self, socket) {\n  emit('restart-game', self.props.room.long);\n  self.props.setGameOver(false);\n}\n\nfunction gameStarted(cb) {\n  cb('startGame', false);\n}\n\nfunction emit(action, data, socket) {\n  socket.emit(action, data);\n}\n\nexport { restartGameSocket, quitGameSocket, startGameSocket, sendOrientation, subscribeToPlayerEvents };","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/sockets/PingP/player.js"],"names":["openSocket","localSetup","subscribeToPlayerEvents","self","socket","cb","console","log","on","gameStarted","bind","restartGame","gameOver","data","props","setGameOver","sendOrientation","coords","push","room","emit","startGameSocket","startGame","long","quitGameSocket","sockt","restartGameSocket","action"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,SAASC,uBAAT,CAAiCC,IAAjC,EAAuCC,MAAvC,EAA+CC,EAA/C,EAAmD;AAElDC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAH,EAAAA,MAAM,CAACI,EAAP,CAAU,YAAV,EAAwBC,WAAW,CAACC,IAAZ,CAAiB,IAAjB,EAAuBL,EAAvB,EAA2BD,MAA3B,CAAxB;AACAA,EAAAA,MAAM,CAACI,EAAP,CAAU,cAAV,EAA0BG,WAAW,CAACD,IAAZ,CAAiB,IAAjB,EAAuBL,EAAvB,EAA2BD,MAA3B,CAA1B;AACAA,EAAAA,MAAM,CAACI,EAAP,CAAU,WAAV,EAAuBI,QAAQ,CAACF,IAAT,CAAc,IAAd,EAAoBP,IAApB,EAA0BC,MAA1B,CAAvB,EALkD,CAMlD;AACA;;AAGD,SAASQ,QAAT,CAAkBT,IAAlB,EAAwBU,IAAxB,EAA6B;AAC5BV,EAAAA,IAAI,CAACW,KAAL,CAAWC,WAAX,CAAuB,IAAvB,EAA6BF,IAA7B,EAD4B,CAE5B;AACA;;AAED,SAASG,eAAT,CAAyBC,MAAzB,EAAiCd,IAAjC,EAAuCC,MAAvC,EAA8C;AAC7CD,EAAAA,IAAI,CAACW,KAAL,CAAWI,IAAX,CAAgB,gBAAhB;;AACA,MAAIf,IAAI,CAACW,KAAL,CAAWK,IAAf,EAAoB;AACnB,QAAIN,IAAI,GAAG;AACVM,MAAAA,IAAI,EAAEhB,IAAI,CAACW,KAAL,CAAWK,IADP;AAEVF,MAAAA,MAAM,EAAEA;AAFE,KAAX;AAIAG,IAAAA,IAAI,CAAC,oBAAD,EAAuBP,IAAvB,EAA6BT,MAA7B,CAAJ;AACA;AACD;;AAED,SAASO,WAAT,CAAqBN,EAArB,EAAwB;AACvBA,EAAAA,EAAE,CAAC,aAAD,EAAgB,KAAhB,CAAF;AACA;;AAED,SAASgB,eAAT,CAAyBlB,IAAzB,EAA+BC,MAA/B,EAAsC;AACrCD,EAAAA,IAAI,CAACW,KAAL,CAAWQ,SAAX;AACAF,EAAAA,IAAI,CAAC,YAAD,EAAejB,IAAI,CAACW,KAAL,CAAWK,IAAX,CAAgBI,IAA/B,CAAJ;AACA;;AAED,SAASC,cAAT,CAAwBrB,IAAxB,EAA8BsB,KAA9B,EAAoC;AACnCtB,EAAAA,IAAI,CAACW,KAAL,CAAWQ,SAAX;AACAF,EAAAA,IAAI,CAAC,kBAAD,EAAqBjB,IAAI,CAACW,KAAL,CAAWK,IAAX,CAAgBI,IAArC,CAAJ;AACA;;AAED,SAASG,iBAAT,CAA2BvB,IAA3B,EAAiCC,MAAjC,EAAwC;AACvCgB,EAAAA,IAAI,CAAC,cAAD,EAAiBjB,IAAI,CAACW,KAAL,CAAWK,IAAX,CAAgBI,IAAjC,CAAJ;AACApB,EAAAA,IAAI,CAACW,KAAL,CAAWC,WAAX,CAAuB,KAAvB;AACA;;AAED,SAASN,WAAT,CAAqBJ,EAArB,EAAwB;AACvBA,EAAAA,EAAE,CAAC,WAAD,EAAc,KAAd,CAAF;AACA;;AAID,SAASe,IAAT,CAAcO,MAAd,EAAsBd,IAAtB,EAA4BT,MAA5B,EAAmC;AAClCA,EAAAA,MAAM,CAACgB,IAAP,CAAYO,MAAZ,EAAoBd,IAApB;AACA;;AAED,SACCa,iBADD,EAECF,cAFD,EAGCH,eAHD,EAICL,eAJD,EAKCd,uBALD","sourcesContent":["import openSocket from 'socket.io-client';\nimport localSetup from 'config/local'\n\n\nfunction subscribeToPlayerEvents(self, socket, cb) {\n\n\tconsole.log('SUBSCRIBING TO PLAYER PINGP')\n\tsocket.on('start-game', gameStarted.bind(this, cb, socket))\n\tsocket.on('restart-game', restartGame.bind(this, cb, socket))\n\tsocket.on('game-over', gameOver.bind(this, self, socket))\n\t// socket.on('power-up-gained', powerUpGained.bind(this, self))\n}\n\n\nfunction gameOver(self, data){\n\tself.props.setGameOver(true, data)\n\t// cb('setGameOver', true)\n}\n\nfunction sendOrientation(coords, self, socket){\n\tself.props.push('/inthefunction')\n\tif (self.props.room){\n\t\tlet data = {\n\t\t\troom: self.props.room,\n\t\t\tcoords: coords\n\t\t}\n\t\temit('device-orientation', data, socket)\n\t}\n}\n\nfunction restartGame(cb){\n\tcb('setGameOver', false)\n}\n\nfunction startGameSocket(self, socket){\t\n\tself.props.startGame()\n\temit('start-game', self.props.room.long)\n}\n\nfunction quitGameSocket(self, sockt){\n\tself.props.startGame()\n\temit('quit-game-player', self.props.room.long)\n}\n\nfunction restartGameSocket(self, socket){\n\temit('restart-game', self.props.room.long)\n\tself.props.setGameOver(false)\t\n}\n\nfunction gameStarted(cb){\n\tcb('startGame', false)\n}\n\n\n\nfunction emit(action, data, socket){\n\tsocket.emit(action, data)\n}\n\nexport { \n\trestartGameSocket,\n\tquitGameSocket,\n\tstartGameSocket,\n\tsendOrientation,\n\tsubscribeToPlayerEvents,\n\n};"]},"metadata":{},"sourceType":"module"}