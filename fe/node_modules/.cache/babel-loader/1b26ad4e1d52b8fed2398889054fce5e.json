{"ast":null,"code":"import _defineProperty from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bobby.hewitt/Documents/test/ops/fe/src/components/canvas/index.js\";\nimport React, { Component } from 'react';\nimport './style.scss';\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Canvas, _Component);\n\n  function Canvas(props) {\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Canvas).call(this, props)); // canvas\n\n    _this.ctx = null; //player\n\n    _this.balls = [];\n    _this.playerHeight = 120;\n    _this.playerWidth = 7;\n    _this.playerX = 20;\n    _this.playerY = _this.props.height / 2 - _this.playerHeight / 2; //player 2\n\n    _this.player2X = _this.props.width - _this.playerX;\n    _this.player2Y = _this.props.height / 2 - _this.playerHeight / 2; //ball\n\n    _this.ballSize = 5;\n    _this.ballX = _this.props.width / 2;\n    _this.ballY = _this.props.height / 2 - 100; // this.ballY = this.props.height / 2 ;\n\n    _this.ballDirX = 1;\n    _this.ballDirY = 1;\n    _this.ballYSpeed = Math.random() < 0.5 ? 5 : -5; // this.ballYSpeed = 0;\n\n    _this.ballXSpeed = Math.random() < 0.5 ? 5 : -5; // this.ballXSpeed = -5;\n    //game\n\n    _this.maxScore = 7;\n    _this.hasStarted = false;\n    _this.state = {\n      player1PowerUp: false,\n      player2PowerUp: false,\n      player1Score: 0,\n      player2Score: 0\n    };\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(np) {\n      //2 players have joined.  Ready to play\n      if (this.props.numOfPlayers !== 2 && np.numOfPlayers === 2) {\n        this.resetScores();\n        this.setup();\n      } //reset because starting new game\n\n\n      if (this.props.isGameOver && !np.isGameOver) {\n        this.hasStarted = false;\n        this.playerY = this.props.height / 2 - this.playerHeight / 2;\n        this.player2X = this.props.width - this.playerX;\n        this.player2Y = this.props.height / 2 - this.playerHeight / 2;\n        this.ballX = this.props.width / 2;\n        this.ballY = this.props.height / 2 - 100;\n        this.resetScores();\n      } // handle multi ball\n      // if ((this.props.player1PowerUp !== 'multiBall' && np.player1PowerUp === 'multiBall') || (this.props.player2PowerUp !== 'multiBall' && np.player2PowerUp === 'multiBall')){\n      // }\n      //let players move between games\n\n\n      if (!this.props.isGameOver && np.isGameOver) {\n        this.hasStarted = false;\n      } //window resize.  Adjust canvas and limits\n\n\n      if (this.props.height !== np.height || this.props.width !== np.width) {\n        this.playerY = this.props.height / 2 - this.playerHeight / 2;\n        this.player2X = this.props.width - this.playerX;\n        this.player2Y = this.props.height / 2 - this.playerHeight / 2;\n        this.ballX = this.props.width / 2;\n        this.ballY = this.props.height / 2 - 100;\n      }\n    }\n  }, {\n    key: \"powerUp\",\n    value: function powerUp(player) {\n      var _this2 = this;\n\n      var type = player === 1 ? 'player1PowerUp' : 'player2PowerUp'; // handle socket call for power up\n\n      this.props.powerUpGained(player);\n      this.setState(_defineProperty({}, type, true), function () {\n        setTimeout(function () {\n          _this2.setState(_defineProperty({}, type, false));\n        }, 200);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //get a reference to the canvas and being drawing\n      var ctx = this.refs.canvas.getContext('2d');\n      this.ctx = ctx;\n      this.loop();\n    }\n  }, {\n    key: \"resetScores\",\n    value: function resetScores() {\n      this.setState({\n        player1Score: 0,\n        player2Score: 0\n      });\n    }\n  }, {\n    key: \"setup\",\n    value: function setup() {\n      // reset variables\n      this.ballY = this.props.height / 2 - 100;\n      this.ballX = this.props.width / 2;\n      this.ballYSpeed = Math.random() < 0.5 ? 5 : -5;\n      this.ballXSpeed = Math.random() < 0.5 ? 5 : -5;\n    }\n  }, {\n    key: \"loop\",\n    value: function loop() {\n      //clear things\n      this.ctx.clearRect(0, 0, this.props.width, this.props.height); //update things\n\n      if (this.props.isPlaying && !this.props.isGameOver) {\n        this.hasStarted = true;\n        this.updateBall();\n        if (this.props.numOfPlayers === 2) this.updatePlayer2();\n        this.updatePlayer();\n      } else if (!this.props.isPlaying && !this.hasStarted) {\n        this.updatePlayer2();\n        this.updatePlayer();\n      } //check if player has hit ball if the xPos is near to a player\n\n\n      if (this.ballX <= this.playerX && this.ballX > this.playerX - this.playerWidth) {\n        this.checkCollision();\n      } else if (this.ballX + this.ballSize >= this.player2X && this.ballX < this.player2X + this.playerWidth) {\n        this.checkPlayer2Collision();\n      } //draw everything\n\n\n      this.drawBoard();\n      this.drawPlayer();\n      this.drawBall(); //do it all again\n\n      window.requestAnimationFrame(this.loop.bind(this));\n    }\n  }, {\n    key: \"drawBoard\",\n    value: function drawBoard() {\n      this.ctx.beginPath();\n      this.ctx.setLineDash([15, 15]);\n      this.ctx.strokeStyle = '#f7f7f7';\n      this.ctx.moveTo(this.props.width / 2, 0);\n      this.ctx.lineTo(this.props.width / 2, this.props.height);\n      this.ctx.stroke();\n    }\n  }, {\n    key: \"updateBall\",\n    value: function updateBall() {\n      var _this3 = this;\n\n      this.ballX = this.ballX + this.ballXSpeed * this.ballDirX;\n      this.ballY = this.ballY + this.ballYSpeed * this.ballDirY; //ball has gone of right edge of screen\n\n      if (this.ballX > this.props.width - this.ballSize) {\n        //if there is a second player let it go and reset\n        if (this.props.numOfPlayers === 2) {\n          this.props.scored();\n\n          if (this.state.player1Score + 1 < this.maxScore) {\n            this.setState({\n              player1Score: this.state.player1Score + 1\n            });\n          } else {\n            this.setState({\n              player1Score: this.state.player1Score + 1\n            }, function () {\n              _this3.props.gameOver('player1');\n            });\n          }\n\n          this.setup();\n        } else {\n          //otherwise turn the ball around\n          this.ballDirX *= -1;\n        } //ball has gone off left edge of screen reset\n\n      } else if (this.ballX < 0) {\n        this.props.scored(); //if there are 2 players count scores\n\n        if (this.props.numOfPlayers === 2) {\n          if (this.state.player2Score + 1 < this.maxScore) {\n            this.setState({\n              player2Score: this.state.player2Score + 1\n            });\n          } else {\n            this.setState({\n              player2Score: this.state.player2Score + 1\n            }, function () {\n              _this3.props.gameOver('player2');\n            });\n          }\n        }\n\n        this.setup();\n      } //turn ball around on y axis\n\n\n      if (this.ballY > this.props.height - this.ballSize || this.ballY <= 0) {\n        this.ballDirY *= -1;\n      }\n    }\n  }, {\n    key: \"drawBall\",\n    value: function drawBall() {\n      function Circle(x, y, r) {\n        this.x = x === null ? 0 : x;\n        this.y = y === null ? 0 : y;\n        this.r = r === null ? 0 : r;\n\n        this.draw = function (ctx) {\n          ctx.beginPath();\n          ctx.arc(this.x, this.y, this.r, 0, Math.PI * 2);\n          ctx.fillStyle = \"#f7f7f7\";\n          ctx.fill();\n        };\n      }\n\n      var circ = new Circle(this.ballX, this.ballY, this.ballSize);\n      circ.draw(this.ctx);\n    }\n  }, {\n    key: \"updatePlayer\",\n    value: function updatePlayer() {\n      //dont let player go beyond boundaries of the screen\n      // if (this.props.player2PowerUp === 'invertOpponent'){\n      // \tthis.playerY =  \n      // \t(this.playerY + this.props.yDir) > this.props.height - this.playerHeight ?\n      // \t\tthis.props.height - this.playerHeight : \n      // \t(this.playerY + this.props.yDir) <= 0 ?\n      // \t\t0 : this.playerY + this.props.yDir\n      // } else {\n      this.playerY = this.playerY - this.props.yDir > this.props.height - this.playerHeight ? this.props.height - this.playerHeight : this.playerY - this.props.yDir <= 0 ? 0 : this.playerY - this.props.yDir; // }\n    }\n  }, {\n    key: \"updatePlayer2\",\n    value: function updatePlayer2() {\n      //dont let player go beyond boundaries of the screen\n      // if (this.props.player1PowerUp === 'invertOpponent'){\n      // \tthis.player2Y =  \n      // \t(this.player2Y + this.props.yDir2) > this.props.height - this.playerHeight ?\n      // \t\tthis.props.height - this.playerHeight : \n      // \t(this.player2Y + this.props.yDir2) <= 0 ?\n      // \t\t0 : this.player2Y + this.props.yDir2 \n      // } else {\n      this.player2Y = this.player2Y - this.props.yDir2 > this.props.height - this.playerHeight ? this.props.height - this.playerHeight : this.player2Y - this.props.yDir2 <= 0 ? 0 : this.player2Y - this.props.yDir2; // }\n    }\n  }, {\n    key: \"drawPlayer\",\n    value: function drawPlayer() {\n      function Player(x, y, w, h, fill) {\n        this.x = x === null ? 20 : x;\n        this.y = y === null ? 0 : y;\n\n        this.draw = function (ctx) {\n          ctx.rect(x, y, w, h);\n          ctx.fillStyle = '#f7f7f7';\n          ctx.fill();\n        };\n      }\n\n      var player = new Player(this.playerX - this.playerWidth, this.playerY, this.playerWidth, this.playerHeight);\n      player.draw(this.ctx);\n      var player2 = new Player(this.player2X - this.playerWidth, this.player2Y, this.playerWidth, this.playerHeight);\n      player2.draw(this.ctx);\n    }\n  }, {\n    key: \"checkCollision\",\n    value: function checkCollision() {\n      var top = this.playerY;\n      var bottom = this.playerY + this.playerHeight;\n\n      if (this.ballY > top && this.ballY < bottom) {\n        this.ballDirX *= -1; //increase ballXSpeed every time player 1 hits the ball\n\n        if (this.ballDirX < 0) {\n          this.ballXSpeed -= 1;\n        } else {\n          this.ballXSpeed += 1;\n        }\n\n        var normalisedSpeed = this.props.yDir > 0 ? this.props.yDir : this.props.yDir * -1; //changes ball y speed if paddle is moving on impact\n\n        if (this.playerY !== 0 && this.playerY !== this.props.height - this.playerHeight && normalisedSpeed >= 8) {\n          // this.powerUp(1)\n          if (this.ballYSpeed > 0) {\n            this.ballYSpeed += this.props.yDir / 3;\n          } else {\n            this.ballYSpeed -= this.props.yDir / 3;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"checkPlayer2Collision\",\n    value: function checkPlayer2Collision() {\n      var top2 = this.player2Y;\n      var bottom2 = this.player2Y + this.playerHeight;\n\n      if (this.ballY > top2 && this.ballY < bottom2) {\n        this.ballDirX *= -1; // establish player speed \n\n        var normalisedSpeed = this.props.yDir2 > 0 ? this.props.yDir2 : this.props.yDir2 * -1; //changes ball y speed if paddle is moving on impact\n\n        if (this.player2Y !== 0 && this.player2Y !== this.props.height - this.playerHeight && normalisedSpeed >= 8) {\n          // this.powerUp(2)\n          if (this.ballYSpeed > 0) {\n            this.ballYSpeed += this.props.yDir2 / 3;\n          } else {\n            this.ballYSpeed -= this.props.yDir2 / 3;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"canvasContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: \"canvas\",\n        id: \"canvas\",\n        height: this.props.height,\n        width: this.props.width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"scores\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, this.props.numOfPlayers > 1 && React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, this.state.player1Score), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, this.state.player2Score))));\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nexport { Canvas as default };","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/components/canvas/index.js"],"names":["React","Component","Canvas","props","ctx","balls","playerHeight","playerWidth","playerX","playerY","height","player2X","width","player2Y","ballSize","ballX","ballY","ballDirX","ballDirY","ballYSpeed","Math","random","ballXSpeed","maxScore","hasStarted","state","player1PowerUp","player2PowerUp","player1Score","player2Score","np","numOfPlayers","resetScores","setup","isGameOver","player","type","powerUpGained","setState","setTimeout","refs","canvas","getContext","loop","clearRect","isPlaying","updateBall","updatePlayer2","updatePlayer","checkCollision","checkPlayer2Collision","drawBoard","drawPlayer","drawBall","window","requestAnimationFrame","bind","beginPath","setLineDash","strokeStyle","moveTo","lineTo","stroke","scored","gameOver","Circle","x","y","r","draw","arc","PI","fillStyle","fill","circ","yDir","yDir2","Player","w","h","rect","player2","top","bottom","normalisedSpeed","top2","bottom2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './style.scss'\n\nexport default class Canvas extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\t// canvas\n\t\tthis.ctx = null;\n\t\t//player\n\t\tthis.balls = []\n\t\tthis.playerHeight = 120;\n\t\tthis.playerWidth = 7;\n\t\tthis.playerX = 20;\n\t\tthis.playerY = this.props.height / 2 - this.playerHeight / 2\n\t\t//player 2\n\t\tthis.player2X = this.props.width - this.playerX;\n\t\tthis.player2Y = this.props.height / 2 - this.playerHeight / 2\n\t\t//ball\n\t\tthis.ballSize = 5;\n\t\tthis.ballX = this.props.width / 2;\n\t\tthis.ballY = this.props.height / 2 -100;\n\t\t// this.ballY = this.props.height / 2 ;\n\t\tthis.ballDirX = 1;\n\t\tthis.ballDirY = 1;\n\t\tthis.ballYSpeed = Math.random() < 0.5 ? 5 : -5\n\t\t// this.ballYSpeed = 0;\n\t\tthis.ballXSpeed = Math.random() < 0.5 ? 5 : -5\n\t\t// this.ballXSpeed = -5;\n\t\t//game\n\t\tthis.maxScore = 7;\n\t\tthis.hasStarted = false;\n\t\tthis.state = {\n\t\t\tplayer1PowerUp: false,\n\t\t\tplayer2PowerUp: false,\n\t\t\tplayer1Score: 0,\n\t\t\tplayer2Score: 0,\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(np){\n\t\t//2 players have joined.  Ready to play\n\t\tif (this.props.numOfPlayers !== 2 && np.numOfPlayers === 2){\n\t\t\tthis.resetScores()\n\t\t\tthis.setup()\n\t\t}\n\t\t//reset because starting new game\n\t\tif (this.props.isGameOver && !np.isGameOver){\n\t\t\tthis.hasStarted = false;\n\t\t\tthis.playerY = this.props.height / 2 - this.playerHeight / 2\n\t\t\tthis.player2X = this.props.width - this.playerX;\n\t\t\tthis.player2Y = this.props.height / 2 - this.playerHeight / 2\n\t\t\tthis.ballX = this.props.width / 2;\n\t\t\tthis.ballY = this.props.height / 2 -100;\n\t\t\tthis.resetScores()\n\t\t}\n\t\t// handle multi ball\n\t\t// if ((this.props.player1PowerUp !== 'multiBall' && np.player1PowerUp === 'multiBall') || (this.props.player2PowerUp !== 'multiBall' && np.player2PowerUp === 'multiBall')){\n\n\t\t// }\n\t\t//let players move between games\n\t\tif (!this.props.isGameOver && np.isGameOver){\n\t\t\tthis.hasStarted = false;\n\t\t}\n\t\t//window resize.  Adjust canvas and limits\n\t\tif(this.props.height !== np.height || this.props.width !== np.width){\n\t\t\tthis.playerY = this.props.height / 2 - this.playerHeight / 2\n\t\t\tthis.player2X = this.props.width - this.playerX;\n\t\t\tthis.player2Y = this.props.height / 2 - this.playerHeight / 2\n\t\t\tthis.ballX = this.props.width / 2;\n\t\t\tthis.ballY = this.props.height / 2 -100;\n\t\t}\n\t}\n\n\tpowerUp(player){\n\t\tlet type = player === 1 ? 'player1PowerUp' : 'player2PowerUp'\n\t\t// handle socket call for power up\n\t\tthis.props.powerUpGained(player)\n\t\tthis.setState({[type]: true}, () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.setState({[type]: false})\n\t\t\t},200)\n\t\t})\n\t\t\n\t}\n\n\n\tcomponentDidMount(){\n\t\t//get a reference to the canvas and being drawing\n\t\tlet ctx = this.refs.canvas.getContext('2d')\n\t\tthis.ctx = ctx\n\t\tthis.loop()\n\t}\n\n\tresetScores(){\n\t\tthis.setState({\n\t\t\tplayer1Score: 0,\n\t\t\tplayer2Score: 0\n\t\t})\n\t}\n\n\tsetup(){\n\t\t// reset variables\n\t\tthis.ballY = this.props.height / 2 - 100\n\t\tthis.ballX = this.props.width / 2\n\t\tthis.ballYSpeed = Math.random() < 0.5 ? 5 : -5\n\t\tthis.ballXSpeed = Math.random() < 0.5 ? 5 : -5\n\t}\n\n\tloop(){\n\t\t//clear things\n\t\tthis.ctx.clearRect(0, 0, this.props.width, this.props.height);\n\t\t//update things\n\t\tif (this.props.isPlaying && !this.props.isGameOver){\n\t\t\tthis.hasStarted = true\n\t\t\tthis.updateBall()\n\t\t\tif (this.props.numOfPlayers === 2) this.updatePlayer2()\n\t\t\tthis.updatePlayer()\n\t\t} else if (!this.props.isPlaying && !this.hasStarted){\n\t\t\tthis.updatePlayer2()\n\t\t\tthis.updatePlayer()\n\t\t}\n\t\t//check if player has hit ball if the xPos is near to a player\n\t\tif (this.ballX <= this.playerX && this.ballX > this.playerX - this.playerWidth){\n\t\t\tthis.checkCollision()\n\t\t} else if (this.ballX + this.ballSize >= this.player2X && this.ballX < this.player2X + this.playerWidth){\n\t\t\tthis.checkPlayer2Collision()\n\t\t}\n\t\t//draw everything\n\t\tthis.drawBoard()\n\t\tthis.drawPlayer()\n\t\tthis.drawBall()\n\t\t//do it all again\n\t\twindow.requestAnimationFrame(this.loop.bind(this))\n\t}\n\n\tdrawBoard(){\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.setLineDash([15, 15]);\n\t\tthis.ctx.strokeStyle = '#f7f7f7';\n\t\tthis.ctx.moveTo(this.props.width / 2, 0);\n\t\tthis.ctx.lineTo(this.props.width / 2, this.props.height);\n\t\tthis.ctx.stroke();\n\t}\n\n\tupdateBall(){\n\t\tthis.ballX = this.ballX + (this.ballXSpeed * this.ballDirX)\n\t\tthis.ballY = this.ballY + (this.ballYSpeed * this.ballDirY)\n\t\t//ball has gone of right edge of screen\n\t\tif (this.ballX > this.props.width - this.ballSize ){\n\t\t\t//if there is a second player let it go and reset\n\t\t\tif (this.props.numOfPlayers === 2){\n\t\t\t\tthis.props.scored()\n\t\t\t\tif (this.state.player1Score + 1 < this.maxScore){\n\t\t\t\t\tthis.setState({player1Score: this.state.player1Score + 1})\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({player1Score: this.state.player1Score + 1}, () => {\n\t\t\t\t\t\tthis.props.gameOver('player1')\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tthis.setup()\n\t\t\t} else {\n\t\t\t\t//otherwise turn the ball around\n\t\t\t\tthis.ballDirX *= -1\n\t\t\t}\n\t\t//ball has gone off left edge of screen reset\n\t\t} else if (this.ballX < 0){\n\t\t\tthis.props.scored()\n\t\t\t//if there are 2 players count scores\n\t\t\tif (this.props.numOfPlayers === 2){\n\t\t\t\tif (this.state.player2Score + 1 < this.maxScore){\n\t\t\t\t\tthis.setState({player2Score: this.state.player2Score + 1})\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({player2Score: this.state.player2Score + 1}, () => {\n\t\t\t\t\t\tthis.props.gameOver('player2')\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setup()\n\t\t} \n\t\t//turn ball around on y axis\n\t\tif (this.ballY > this.props.height - this.ballSize || this.ballY <= 0){\n\t\t\tthis.ballDirY *= -1\n\t\t}\n\n\t}\n\n\tdrawBall(){\n\t\tfunction Circle(x, y, r) {\t  \n\t\t    this.x = (x === null) ? 0 : x;\n\t\t    this.y = (y === null) ? 0 : y;\n\t\t    this.r = (r === null) ? 0 : r;\n\t\t    this.draw = function(ctx) {\n\t\t       ctx.beginPath();\n\t\t       ctx.arc(this.x, this.y, this.r, 0, Math.PI*2);\n\t\t       ctx.fillStyle = \"#f7f7f7\";\n\t\t       ctx.fill();\n\t\t    }\n\t\t}\n\t\tvar circ = new Circle(this.ballX, this.ballY, this.ballSize);\n\t\tcirc.draw(this.ctx);\n\t}\n\n\tupdatePlayer(){\n\t\t//dont let player go beyond boundaries of the screen\n\t\t// if (this.props.player2PowerUp === 'invertOpponent'){\n\t\t// \tthis.playerY =  \n\t\t// \t(this.playerY + this.props.yDir) > this.props.height - this.playerHeight ?\n\t\t// \t\tthis.props.height - this.playerHeight : \n\t\t// \t(this.playerY + this.props.yDir) <= 0 ?\n\t\t// \t\t0 : this.playerY + this.props.yDir\n\t\t// } else {\n\t\t\tthis.playerY =  \n\t\t\t(this.playerY - this.props.yDir) > this.props.height - this.playerHeight ?\n\t\t\t\tthis.props.height - this.playerHeight : \n\t\t\t(this.playerY - this.props.yDir) <= 0 ?\n\t\t\t\t0 : this.playerY - this.props.yDir\n\t\t// }\n\t}\n\n\tupdatePlayer2(){\n\t\t//dont let player go beyond boundaries of the screen\n\t\t// if (this.props.player1PowerUp === 'invertOpponent'){\n\t\t// \tthis.player2Y =  \n\t\t// \t(this.player2Y + this.props.yDir2) > this.props.height - this.playerHeight ?\n\t\t// \t\tthis.props.height - this.playerHeight : \n\t\t// \t(this.player2Y + this.props.yDir2) <= 0 ?\n\t\t// \t\t0 : this.player2Y + this.props.yDir2 \n\t\t// } else {\n\t\t\tthis.player2Y =  \n\t\t\t(this.player2Y - this.props.yDir2) > this.props.height - this.playerHeight ?\n\t\t\t\tthis.props.height - this.playerHeight : \n\t\t\t(this.player2Y - this.props.yDir2) <= 0 ?\n\t\t\t\t0 : this.player2Y - this.props.yDir2 \n\t\t// }\n\n\t\t\n\t\t\t\t\n\t}\n\n\tdrawPlayer(){\n\t\tfunction Player(x, y, w, h, fill) {\n\t\t    this.x = (x === null) ? 20 : x;\n\t\t    this.y = (y === null) ? 0 : y;\n\t\t    this.draw = function(ctx) {\n\t\t       ctx.rect(x,y,w,h);\n\t\t       ctx.fillStyle = '#f7f7f7';\n\t\t       ctx.fill();\n\t\t    }\n\t\t}\n\t\tvar player = new Player(this.playerX - this.playerWidth, this.playerY, this.playerWidth,this.playerHeight);\n\t\tplayer.draw(this.ctx);\n\t\tvar player2 = new Player(this.player2X - this.playerWidth, this.player2Y, this.playerWidth,this.playerHeight);\n\t\tplayer2.draw(this.ctx);\n\t\t\n\t}\n\n\tcheckCollision(){\n\t\tlet top = this.playerY\n\t\tlet bottom = this.playerY + this.playerHeight\n\t\tif (this.ballY > top && this.ballY < bottom){\n\t\t\tthis.ballDirX *= -1\n\t\t\t//increase ballXSpeed every time player 1 hits the ball\n\t\t\tif (this.ballDirX < 0){\n\t\t\t\tthis.ballXSpeed -= 1\n\t\t\t} else{\n\t\t\t\tthis.ballXSpeed += 1\n\t\t\t}\n\t\t\tconst normalisedSpeed = this.props.yDir > 0 ? this.props.yDir : this.props.yDir * -1\n\t\t\t//changes ball y speed if paddle is moving on impact\n\t\t\tif (this.playerY !== 0 && this.playerY !== this.props.height - this.playerHeight && normalisedSpeed >= 8){\n\t\t\t\t// this.powerUp(1)\n\t\t\t\tif (this.ballYSpeed > 0){\n\t\t\t\t\tthis.ballYSpeed += this.props.yDir / 3\n\t\t\t\t} else {\n\t\t\t\t\tthis.ballYSpeed -= this.props.yDir / 3\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckPlayer2Collision(){\n\t\tlet top2 = this.player2Y\n\t\tlet bottom2 = this.player2Y + this.playerHeight\n\t\tif (this.ballY > top2 && this.ballY < bottom2){\n\t\t\tthis.ballDirX *= -1\n\t\t\t// establish player speed \n\t\t\tconst normalisedSpeed = this.props.yDir2 > 0 ? this.props.yDir2 : this.props.yDir2 * -1\n\t\t\t//changes ball y speed if paddle is moving on impact\n\n\t\t\tif (this.player2Y !== 0 && this.player2Y !== this.props.height - this.playerHeight && normalisedSpeed >= 8){\n\t\t\t\t// this.powerUp(2)\n\t\t\t\tif (this.ballYSpeed > 0){\n\t\t\t\t\tthis.ballYSpeed += this.props.yDir2 / 3\n\t\t\t\t} else {\n\t\t\t\t\tthis.ballYSpeed -= this.props.yDir2 / 3\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\t\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"canvasContainer\">\n\t\t\t\t<canvas ref=\"canvas\" id=\"canvas\" height={this.props.height} width={this.props.width}>\n\t\t\t\t</canvas>\n\t\t\t\t<div className=\"scores\">\n\t\t\t\t\t{this.props.numOfPlayers > 1 &&\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<p>{this.state.player1Score}</p>\n\t\t\t\t\t\t\t<p> </p>\n\t\t\t\t\t\t\t<p>{this.state.player2Score}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\t\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}