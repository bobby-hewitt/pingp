{"ast":null,"code":"import openSocket from 'socket.io-client';\nimport localSetup from 'config/local';\nvar POWER_UP_DURATION = 5000;\n\nfunction subscribeToHostEvents(self, socket, cb) {\n  console.log('SUBSCRIBING TO HOST');\n  socket.emit('host-connected');\n  socket.on('room-code-generated', roomCodeGenerated.bind(this, cb));\n  socket.on('update-players', updatePlayers.bind(this, cb));\n  socket.on('chosen-game', chosenGame.bind(this, self, socket));\n}\n\nfunction gotCoords(cb, data) {\n  if (data.coords.playerNumber === 1) {\n    cb('setCoords1', data);\n  } else {\n    cb('setCoords2', data);\n  }\n}\n\nfunction chosenGame(self, nothing, data) {\n  console.log(data);\n  self.props.push('m/' + data);\n}\n\nfunction restartGame(cb) {\n  cb('setGameOver', false);\n}\n\nfunction quitGamePlayer() {\n  window.location.reload();\n}\n\nfunction startGame(cb) {\n  cb('startGame');\n}\n\nfunction roomCodeGenerated(cb, data) {\n  cb('setRoomCode', data);\n}\n\nfunction gameOver(self, winner, socket) {\n  self.props.setGameOver(true);\n  socket.emit('game-over', winner);\n}\n\nfunction updatePlayers(cb, data) {\n  console.log('updateing players', data);\n  cb('updatePlayers', data);\n}\n\nfunction startRound(self, cb, socket) {\n  socket.emit('start-round');\n} //can probably delete theze functions\n// function playerResponded(self, data){\n// \tself.props.setResponses(data)\n// }\n\n\nfunction powerUpUsed(self, data) {\n  self.props.powerUpUsedGameplay(data);\n}\n\nfunction powerUpGained(data, self, socket) {\n  socket.emit('power-up-gained', data);\n}\n\nexport { powerUpGained, gameOver, subscribeToHostEvents, startRound };","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/sockets/host.js"],"names":["openSocket","localSetup","POWER_UP_DURATION","subscribeToHostEvents","self","socket","cb","console","log","emit","on","roomCodeGenerated","bind","updatePlayers","chosenGame","gotCoords","data","coords","playerNumber","nothing","props","push","restartGame","quitGamePlayer","window","location","reload","startGame","gameOver","winner","setGameOver","startRound","powerUpUsed","powerUpUsedGameplay","powerUpGained"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,IAAMC,iBAAiB,GAAG,IAA1B;;AACA,SAASC,qBAAT,CAA+BC,IAA/B,EAAqCC,MAArC,EAA6CC,EAA7C,EAAiD;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAH,EAAAA,MAAM,CAACI,IAAP,CAAY,gBAAZ;AACAJ,EAAAA,MAAM,CAACK,EAAP,CAAU,qBAAV,EAAiCC,iBAAiB,CAACC,IAAlB,CAAuB,IAAvB,EAA6BN,EAA7B,CAAjC;AACED,EAAAA,MAAM,CAACK,EAAP,CAAU,gBAAV,EAA4BG,aAAa,CAACD,IAAd,CAAmB,IAAnB,EAAyBN,EAAzB,CAA5B;AACFD,EAAAA,MAAM,CAACK,EAAP,CAAU,aAAV,EAAyBI,UAAU,CAACF,IAAX,CAAgB,IAAhB,EAAsBR,IAAtB,EAA4BC,MAA5B,CAAzB;AAGA;;AAID,SAASU,SAAT,CAAmBT,EAAnB,EAAuBU,IAAvB,EAA4B;AAC3B,MAAIA,IAAI,CAACC,MAAL,CAAYC,YAAZ,KAA6B,CAAjC,EAAmC;AAClCZ,IAAAA,EAAE,CAAC,YAAD,EAAeU,IAAf,CAAF;AACA,GAFD,MAEO;AACNV,IAAAA,EAAE,CAAC,YAAD,EAAeU,IAAf,CAAF;AACA;AACD;;AAED,SAASF,UAAT,CAAoBV,IAApB,EAA0Be,OAA1B,EAAmCH,IAAnC,EAAwC;AACvCT,EAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACAZ,EAAAA,IAAI,CAACgB,KAAL,CAAWC,IAAX,CAAgB,OAAOL,IAAvB;AACA;;AAED,SAASM,WAAT,CAAqBhB,EAArB,EAAwB;AACvBA,EAAAA,EAAE,CAAC,aAAD,EAAgB,KAAhB,CAAF;AACA;;AAED,SAASiB,cAAT,GAAyB;AACxBC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA;;AAED,SAASC,SAAT,CAAmBrB,EAAnB,EAAsB;AACrBA,EAAAA,EAAE,CAAC,WAAD,CAAF;AACA;;AAED,SAASK,iBAAT,CAA2BL,EAA3B,EAA+BU,IAA/B,EAAoC;AACnCV,EAAAA,EAAE,CAAC,aAAD,EAAgBU,IAAhB,CAAF;AACA;;AAED,SAASY,QAAT,CAAkBxB,IAAlB,EAAwByB,MAAxB,EAAgCxB,MAAhC,EAAuC;AACtCD,EAAAA,IAAI,CAACgB,KAAL,CAAWU,WAAX,CAAuB,IAAvB;AACAzB,EAAAA,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAyBoB,MAAzB;AACA;;AAED,SAAShB,aAAT,CAAuBP,EAAvB,EAA2BU,IAA3B,EAAgC;AAC/BT,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCQ,IAAjC;AACAV,EAAAA,EAAE,CAAC,eAAD,EAAkBU,IAAlB,CAAF;AACA;;AAED,SAASe,UAAT,CAAoB3B,IAApB,EAA0BE,EAA1B,EAA8BD,MAA9B,EAAqC;AACpCA,EAAAA,MAAM,CAACI,IAAP,CAAY,aAAZ;AACA,C,CAGD;AACA;AACA;AACA;;;AAEA,SAASuB,WAAT,CAAqB5B,IAArB,EAA2BY,IAA3B,EAAgC;AAC/BZ,EAAAA,IAAI,CAACgB,KAAL,CAAWa,mBAAX,CAA+BjB,IAA/B;AACA;;AAED,SAASkB,aAAT,CAAuBlB,IAAvB,EAA6BZ,IAA7B,EAAmCC,MAAnC,EAA0C;AACzCA,EAAAA,MAAM,CAACI,IAAP,CAAY,iBAAZ,EAA+BO,IAA/B;AACA;;AAED,SACCkB,aADD,EAECN,QAFD,EAGCzB,qBAHD,EAIC4B,UAJD","sourcesContent":["import openSocket from 'socket.io-client';\nimport localSetup from 'config/local'\n\n\nconst POWER_UP_DURATION = 5000\nfunction subscribeToHostEvents(self, socket, cb) {\n\tconsole.log('SUBSCRIBING TO HOST')\n\tsocket.emit('host-connected');\n\tsocket.on('room-code-generated', roomCodeGenerated.bind(this, cb))\n  \tsocket.on('update-players', updatePlayers.bind(this, cb))\n\tsocket.on('chosen-game', chosenGame.bind(this, self, socket))\n\t\n  \t\n}\n\n\n\nfunction gotCoords(cb, data){\n\tif (data.coords.playerNumber === 1){\n\t\tcb('setCoords1', data)\n\t} else {\n\t\tcb('setCoords2', data)\n\t}\n}\n\nfunction chosenGame(self, nothing, data){\n\tconsole.log(data)\n\tself.props.push('m/' + data)\n}\n\nfunction restartGame(cb){\n\tcb('setGameOver', false)\n}\n\nfunction quitGamePlayer(){\n\twindow.location.reload()\n}\n\nfunction startGame(cb){\n\tcb('startGame')\n}\n\nfunction roomCodeGenerated(cb, data){\n\tcb('setRoomCode', data)\n}\n\nfunction gameOver(self, winner, socket){\n\tself.props.setGameOver(true)\n\tsocket.emit('game-over', winner)\n}\n\nfunction updatePlayers(cb, data){\n\tconsole.log('updateing players', data)\n\tcb('updatePlayers', data)\n}\n\nfunction startRound(self, cb, socket){\n\tsocket.emit('start-round');\n}\n\n\n//can probably delete theze functions\n// function playerResponded(self, data){\n// \tself.props.setResponses(data)\n// }\n\nfunction powerUpUsed(self, data){\n\tself.props.powerUpUsedGameplay(data)\n}\n\nfunction powerUpGained(data, self, socket){\n\tsocket.emit('power-up-gained', data)\n}\n\nexport { \n\tpowerUpGained,\n\tgameOver,\n\tsubscribeToHostEvents,\n\tstartRound\n};"]},"metadata":{},"sourceType":"module"}