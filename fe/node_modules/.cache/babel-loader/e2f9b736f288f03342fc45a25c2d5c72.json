{"ast":null,"code":"import _objectSpread from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  roomCode: null,\n  players: [],\n  round: 0,\n  isInPlay: false,\n  responses: [],\n  coords: {\n    x: 0,\n    y: 0,\n    z: 0\n  },\n  coords2: {\n    x: 0,\n    y: 0,\n    z: 0\n  }\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // console.log('ACTION',action)\n  switch (action.type) {\n    case 'SET_ROOM_CODE':\n      return _objectSpread({}, state, {\n        roomCode: action.payload\n      });\n\n    case 'SET_COORDS_1':\n      // console.log('setting coords')\n      return _objectSpread({}, state, {\n        coords: action.payload.coords\n      });\n\n    case 'SET_COORDS_2':\n      // console.log('setting coords')\n      return _objectSpread({}, state, {\n        coords2: action.payload.coords\n      });\n\n    case 'ADD_PLAYER':\n      var newPlayers = Object.assign([], state.players);\n      newPlayers.push(action.payload);\n      console.log('ADDING PLAYER', newPlayers); // console.log(newPlayers)\n\n      return _objectSpread({}, state, {\n        players: newPlayers\n      });\n\n    case 'START_ROUND_HOST':\n      return _objectSpread({}, state, {\n        responses: [],\n        isInPlay: true,\n        round: state.round + 1\n      });\n\n    case 'SET_RESPONSES':\n      var responses = Object.assign([], state.responses).sort(function (obj1, obj2) {\n        // Ascending: first age less than the previous\n        return obj1.time - obj2.time;\n      });\n      responses.push(action.payload);\n      return _objectSpread({}, state, {\n        responses: responses\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/reducers/PingP/host.js"],"names":["initialState","roomCode","players","round","isInPlay","responses","coords","x","y","z","coords2","state","action","type","payload","newPlayers","Object","assign","push","console","log","sort","obj1","obj2","time"],"mappings":";AACA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,IADS;AAEnBC,EAAAA,OAAO,EAAC,EAFW;AAGnBC,EAAAA,KAAK,EAAE,CAHY;AAInBC,EAAAA,QAAQ,EAAE,KAJS;AAKnBC,EAAAA,SAAS,EAAE,EALQ;AAMnBC,EAAAA,MAAM,EAAE;AAACC,IAAAA,CAAC,EAAC,CAAH;AAAKC,IAAAA,CAAC,EAAC,CAAP;AAASC,IAAAA,CAAC,EAAC;AAAX,GANW;AAOnBC,EAAAA,OAAO,EAAE;AAACH,IAAAA,CAAC,EAAC,CAAH;AAAKC,IAAAA,CAAC,EAAC,CAAP;AAASC,IAAAA,CAAC,EAAC;AAAX;AAPU,CAArB;AAUA,gBAAe,YAAkC;AAAA,MAAjCE,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AAC/C;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,+BACKF,KADL;AAEEV,QAAAA,QAAQ,EAAEW,MAAM,CAACE;AAFnB;;AAIF,SAAK,cAAL;AACE;AACA,+BACKH,KADL;AAEEL,QAAAA,MAAM,EAAEM,MAAM,CAACE,OAAP,CAAeR;AAFzB;;AAIF,SAAK,cAAL;AACE;AACA,+BACKK,KADL;AAEED,QAAAA,OAAO,EAAEE,MAAM,CAACE,OAAP,CAAeR;AAF1B;;AAIF,SAAK,YAAL;AACE,UAAIS,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAK,CAACT,OAAxB,CAAjB;AACAa,MAAAA,UAAU,CAACG,IAAX,CAAgBN,MAAM,CAACE,OAAvB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,UAA7B,EAHF,CAIE;;AACA,+BACKJ,KADL;AAEET,QAAAA,OAAO,EAAEa;AAFX;;AAIF,SAAK,kBAAL;AACE,+BACKJ,KADL;AAEEN,QAAAA,SAAS,EAAE,EAFb;AAGED,QAAAA,QAAQ,EAAE,IAHZ;AAIED,QAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,GAAc;AAJvB;;AAMF,SAAK,eAAL;AACE,UAAIE,SAAS,GAAGW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAK,CAACN,SAAxB,EAAmCgB,IAAnC,CAAwC,UAASC,IAAT,EAAeC,IAAf,EAAqB;AAC7E;AACA,eAAOD,IAAI,CAACE,IAAL,GAAYD,IAAI,CAACC,IAAxB;AACD,OAHiB,CAAhB;AAIAnB,MAAAA,SAAS,CAACa,IAAV,CAAeN,MAAM,CAACE,OAAtB;AACA,+BACKH,KADL;AAEEN,QAAAA,SAAS,EAATA;AAFF;;AAIF;AACE,aAAOM,KAAP;AA7CJ;AA+CD,CAjDD","sourcesContent":["\nconst initialState = {\n  roomCode: null,\n  players:[],\n  round: 0,\n  isInPlay: false,\n  responses: [],\n  coords: {x:0,y:0,z:0},\n  coords2: {x:0,y:0,z:0}\n}\n\nexport default (state = initialState, action) => {\n  // console.log('ACTION',action)\n  switch (action.type) {\n    case 'SET_ROOM_CODE':\n      return {\n        ...state,\n        roomCode: action.payload,\n      }\n    case 'SET_COORDS_1':\n      // console.log('setting coords')\n      return {\n        ...state,\n        coords: action.payload.coords,\n      }\n    case 'SET_COORDS_2':\n      // console.log('setting coords')\n      return {\n        ...state,\n        coords2: action.payload.coords,\n      }\n    case 'ADD_PLAYER':\n      let newPlayers = Object.assign([], state.players)\n      newPlayers.push(action.payload)\n      console.log('ADDING PLAYER', newPlayers)\n      // console.log(newPlayers)\n      return {\n        ...state,\n        players: newPlayers,\n      }\n    case 'START_ROUND_HOST':\n      return {\n        ...state,\n        responses: [],\n        isInPlay: true,\n        round: state.round + 1,\n      }\n    case 'SET_RESPONSES':\n      let responses = Object.assign([], state.responses).sort(function(obj1, obj2) {\n      // Ascending: first age less than the previous\n      return obj1.time - obj2.time;\n    });\n      responses.push(action.payload)\n      return {\n        ...state,\n        responses,\n      }\n    default:\n      return state\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}