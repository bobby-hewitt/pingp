{"ast":null,"code":"import _classCallCheck from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bobby.hewitt/Documents/test/ops/fe/src/containers/Quiz/Host/index.js\";\nimport React, { Component } from 'react';\nimport { push as _push } from 'connected-react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { setupGame, showAnswer, showScores } from 'actions/quiz/host';\nimport SocketListener from 'containers/SocketListener/Quiz';\nimport { showQuestionSocket } from 'sockets/Quiz/host';\nimport { showQuestionHost } from 'actions/quiz/host';\nimport './style.scss';\nimport Question from './Question';\n\nvar QuizHost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizHost, _Component);\n\n  function QuizHost(props) {\n    var _this;\n\n    _classCallCheck(this, QuizHost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizHost).call(this, props));\n    _this.timeouts = {};\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(QuizHost, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setupGame();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(np) {\n      if (this.props.responses.length !== this.props.players.length && np.responses === this.props.players.length) {}\n    }\n  }, {\n    key: \"shuffle\",\n    value: function shuffle(array) {\n      var currentIndex = array.length,\n          temporaryValue,\n          randomIndex;\n\n      while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    }\n  }, {\n    key: \"setupGame\",\n    value: function setupGame() {\n      var _this2 = this;\n\n      console.log('here');\n      fetch('https://opentdb.com/api.php?amount=10&type=multiple').then(function (resp) {\n        return resp.json();\n      }) // Transform the data into json\n      .then(function (data) {\n        console.log('recieving data', data); // give players scores\n\n        var playersWithScores = [];\n\n        for (var i = 0; i < _this2.props.players.length; i++) {\n          var player = {\n            id: _this2.props.players[i].id,\n            name: _this2.props.players[i].name,\n            score: 0\n          };\n\n          if (_this2.props.player[i]) {\n            playersWithScores.push(player);\n          }\n        } //shuffle wrong answers with correct ones\n\n\n        for (var _i = 0; _i < data.results.length; _i++) {\n          var q = data.results[_i];\n          q.all_answers = q.incorrect_answers;\n          q.all_answers.push(q.correct_answer);\n          q.all_answers = _this2.shuffle(q.all_answers);\n        }\n\n        var obj = {\n          questions: data.results,\n          players: playersWithScores\n        };\n        console.log(obj);\n\n        _this2.props.setupGame(obj);\n\n        _this2.intro();\n      }).catch(function (err) {\n        console.log('error fetchi9ng data', err);\n      });\n    }\n  }, {\n    key: \"intro\",\n    value: function intro() {\n      this.showQuestion();\n    }\n  }, {\n    key: \"showQuestion\",\n    value: function showQuestion() {\n      console.log(this.props);\n      showQuestionSocket(this, this.props.socket);\n    }\n  }, {\n    key: \"showAnswer\",\n    value: function showAnswer() {\n      this.props.showAnswer(); //force all sockets to waiting state\n    }\n  }, {\n    key: \"showScores\",\n    value: function showScores() {\n      this.props.showScores(); //move to next question index.\n      //reset timings\n      //reset responses\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentQuestion = this.props.currentQuestion;\n      return React.createElement(\"div\", {\n        className: \"quizHostContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(SocketListener, {\n        isHost: true,\n        socket: this.props.socket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), this.props.quizState === 'break' && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Break\"), this.props.quizState === 'question' && React.createElement(Question, {\n        question: currentQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), this.props.quizState === 'answer' && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Answer\"), this.props.quizState === 'end' && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"End\"));\n    }\n  }]);\n\n  return QuizHost;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    room: state.generalHost.room,\n    players: state.generalHost.players,\n    router: state.router,\n    quizPlayers: state.quizHost.players,\n    currentQuestion: state.quizHost.currentQuestion,\n    quizState: state.quizHost.quizState\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    push: function push(path) {\n      return _push(path);\n    },\n    setupGame: setupGame,\n    showAnswer: showAnswer,\n    showQuestionHost: showQuestionHost,\n    showScores: showScores\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizHost);","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/containers/Quiz/Host/index.js"],"names":["React","Component","push","bindActionCreators","connect","setupGame","showAnswer","showScores","SocketListener","showQuestionSocket","showQuestionHost","Question","QuizHost","props","timeouts","state","np","responses","length","players","array","currentIndex","temporaryValue","randomIndex","Math","floor","random","console","log","fetch","then","resp","json","data","playersWithScores","i","player","id","name","score","results","q","all_answers","incorrect_answers","correct_answer","shuffle","obj","questions","intro","catch","err","showQuestion","socket","currentQuestion","quizState","mapStateToProps","room","generalHost","router","quizPlayers","quizHost","mapDispatchToProps","dispatch","path"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { setupGame, showAnswer, showScores } from 'actions/quiz/host'\nimport SocketListener from 'containers/SocketListener/Quiz'\nimport { showQuestionSocket } from 'sockets/Quiz/host'\nimport { showQuestionHost } from 'actions/quiz/host'\nimport './style.scss'\nimport Question from './Question'\nclass QuizHost extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.timeouts = {\n\n\t\t}\n\t\tthis.state = {\n\n\t\t}\n\t}\n\n\tcomponentWillMount(){\n\t\tthis.setupGame()\n\t}\n\n\tcomponentWillReceiveProps(np){\n\t\tif ((this.props.responses.length !== this.props.players.length) && (np.responses === this.props.players.length)){\n\n\t\t}\n\t}\n\n\tshuffle(array) {\n\t  var currentIndex = array.length, temporaryValue, randomIndex;\n\t  while (0 !== currentIndex) {\n\t    randomIndex = Math.floor(Math.random() * currentIndex);\n\t    currentIndex -= 1;\n\t    temporaryValue = array[currentIndex];\n\t    array[currentIndex] = array[randomIndex];\n\t    array[randomIndex] = temporaryValue;\n\t  }\n\t  return array;\n\t}\n\n\tsetupGame(){\n\t\tconsole.log('here')\n\t\tfetch('https://opentdb.com/api.php?amount=10&type=multiple')\n\t\t\t.then((resp) => resp.json()) // Transform the data into json\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log('recieving data', data)\n\t\t\t// give players scores\n\t\t\tlet playersWithScores = []\n\t\t\tfor (let i = 0; i < this.props.players.length; i++){\n\t\t\t\tlet player = {\n\t\t\t\t\tid: this.props.players[i].id,\n\t\t\t\t\tname: this.props.players[i].name,\n\t\t\t\t\tscore: 0\n\t\t\t\t}\n\t\t\t\tif (this.props.player[i]){\n\t\t\t\t\tplayersWithScores.push(player)\n\t\t\t\t}\n\t\t\t}\n\t\t\t//shuffle wrong answers with correct ones\n\t\t\tfor (let i = 0; i < data.results.length; i++){\n\t\t\t\tlet q = data.results[i]\n\t\t\t\tq.all_answers = q.incorrect_answers\n\t\t\t\tq.all_answers.push(q.correct_answer) \n\t\t\t\tq.all_answers = this.shuffle(q.all_answers)\n\t\t\t}\n\t\t\tlet obj = {\n\t\t\t\tquestions: data.results,\n\t\t\t\tplayers: playersWithScores\n\t\t\t}\n\t\t\tconsole.log(obj)\n\t\t\tthis.props.setupGame(obj)\n\t\t\tthis.intro()\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log('error fetchi9ng data', err)\n\t\t})\n\t}\n\n\tintro(){\t\n\t\tthis.showQuestion()\n\t}\n\n\tshowQuestion(){\n\t\tconsole.log(this.props)\n\t\tshowQuestionSocket(this, this.props.socket)\n\t}\n\n\tshowAnswer(){\n\t\tthis.props.showAnswer()\n\t\t//force all sockets to waiting state\n\t}\n\n\tshowScores(){\n\t\tthis.props.showScores()\n\t\t//move to next question index.\n\t\t//reset timings\n\t\t//reset responses\n\t}\n\n\n\n\n\n\n\n\trender(){\n\t\tconst { currentQuestion } = this.props\n\n\t\treturn(\n\t\t\t<div className=\"quizHostContainer\">\n\t\t\t<SocketListener isHost socket={this.props.socket} />\n\t\t\t\t{this.props.quizState === 'break' &&\n\t\t\t\t\t<p>Break</p>\n\t\t\t\t}\n\t\t\t\t{this.props.quizState === 'question' &&\n\t\t\t\t\t<Question question={currentQuestion}/>\n\t\t\t\t}\n\t\t\t\t{this.props.quizState === 'answer' &&\n\t\t\t\t\t<p>Answer</p>\n\t\t\t\t}\n\t\t\t\t{this.props.quizState === 'end' &&\n\t\t\t\t\t<p>End</p>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nconst mapStateToProps = state => ({\n\troom: state.generalHost.room,\n\tplayers: state.generalHost.players,\n\trouter: state.router,\n\tquizPlayers: state.quizHost.players,\n\tcurrentQuestion: state.quizHost.currentQuestion,\n\tquizState: state.quizHost.quizState,\n\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  push: (path) => push(path),\n  setupGame,\n  showAnswer,\n  showQuestionHost,\n  showScores,\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuizHost)"]},"metadata":{},"sourceType":"module"}