{"ast":null,"code":"import openSocket from 'socket.io-client';\nimport localSetup from 'config/local';\nvar socket = localSetup.isLocal ? openSocket(localSetup.localServer + ':9000') : openSocket(localSetup.publicServer);\n\nfunction subscribeToPlayerEvents(self, cb) {\n  console.log('SUBSCRIBING TO PLAYER');\n  socket.on('pingp-success-joining-room', successJoiningRoom.bind(this, self));\n  socket.on('pingp-error-joining-room', errorJoiningRoom.bind(this));\n  socket.on('pingp-start-game', gameStarted.bind(this, cb));\n  socket.on('pingp-room-full', roomFull.bind(this, self));\n  socket.on('pingp-host-quit', hostQuit.bind(this, self));\n  socket.on('pingp-restart-game', restartGame.bind(this, cb));\n  socket.on('pingp-game-over', gameOver.bind(this, self));\n  socket.on('pingp-power-up-gained', powerUpGained.bind(this, self));\n}\n\nfunction getPowerup() {\n  var powerups = ['invertOpponent'];\n  var r = Math.floor(Math.random() * powerups.length);\n  return powerups[r];\n}\n\nfunction powerUpGained(self, data) {\n  self.props.powerUpGained(getPowerup());\n}\n\nfunction powerUpUsedSocket(data, self) {\n  emit('pingp-power-up-used', data);\n  self.props.powerUpUsed();\n}\n\nfunction roomFull(self) {\n  self.props.push('pingp/full');\n}\n\nfunction hostQuit(self) {\n  self.props.push('pingp/not-found');\n}\n\nfunction gameOver(self, data) {\n  self.props.setGameOver(true, data); // cb('setGameOver', true)\n}\n\nfunction successJoiningRoom(self, data) {\n  self.props.setPlayerRoom(data.result);\n  self.props.setPlayerNumber(data.playerNumber);\n}\n\nfunction errorJoiningRoom() {}\n\nfunction sendOrientation(coords, self) {\n  if (self.props.room) {\n    var data = {\n      room: self.props.room.long,\n      coords: coords\n    };\n    emit('pingp-device-orientation', data);\n  }\n}\n\nfunction restartGame(cb) {\n  cb('setGameOver', false);\n}\n\nfunction startGameSocket(self) {\n  self.props.startGame();\n  emit('pingp-start-game', self.props.room.long);\n}\n\nfunction quitGameSocket(self) {\n  self.props.startGame();\n  emit('pingp-quit-game-player', self.props.room.long);\n}\n\nfunction restartGameSocket(self) {\n  emit('pingp-restart-game', self.props.room.long);\n  self.props.setGameOver(false);\n}\n\nfunction gameStarted(cb) {\n  cb('startGame', false);\n}\n\nfunction joinRoom(data, self) {\n  data.id = socket.id;\n  self.props.setSelf(data);\n  emit('pingp-player-join-room', data);\n}\n\nfunction emit(action, data) {\n  socket.emit(action, data);\n}\n\nexport { powerUpUsedSocket, restartGameSocket, quitGameSocket, startGameSocket, sendOrientation, subscribeToPlayerEvents, joinRoom };","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/sockets/PingP/player.js"],"names":["openSocket","localSetup","socket","isLocal","localServer","publicServer","subscribeToPlayerEvents","self","cb","console","log","on","successJoiningRoom","bind","errorJoiningRoom","gameStarted","roomFull","hostQuit","restartGame","gameOver","powerUpGained","getPowerup","powerups","r","Math","floor","random","length","data","props","powerUpUsedSocket","emit","powerUpUsed","push","setGameOver","setPlayerRoom","result","setPlayerNumber","playerNumber","sendOrientation","coords","room","long","startGameSocket","startGame","quitGameSocket","restartGameSocket","joinRoom","id","setSelf","action"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,IAAMC,MAAM,GAAGD,UAAU,CAACE,OAAX,GAAqBH,UAAU,CAACC,UAAU,CAACG,WAAX,GAAyB,OAA1B,CAA/B,GAAoEJ,UAAU,CAACC,UAAU,CAACI,YAAZ,CAA7F;;AAEA,SAASC,uBAAT,CAAiCC,IAAjC,EAAuCC,EAAvC,EAA2C;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAR,EAAAA,MAAM,CAACS,EAAP,CAAU,4BAAV,EAAwCC,kBAAkB,CAACC,IAAnB,CAAwB,IAAxB,EAA8BN,IAA9B,CAAxC;AACAL,EAAAA,MAAM,CAACS,EAAP,CAAU,0BAAV,EAAsCG,gBAAgB,CAACD,IAAjB,CAAsB,IAAtB,CAAtC;AACAX,EAAAA,MAAM,CAACS,EAAP,CAAU,kBAAV,EAA8BI,WAAW,CAACF,IAAZ,CAAiB,IAAjB,EAAuBL,EAAvB,CAA9B;AACAN,EAAAA,MAAM,CAACS,EAAP,CAAU,iBAAV,EAA6BK,QAAQ,CAACH,IAAT,CAAc,IAAd,EAAoBN,IAApB,CAA7B;AACAL,EAAAA,MAAM,CAACS,EAAP,CAAU,iBAAV,EAA6BM,QAAQ,CAACJ,IAAT,CAAc,IAAd,EAAoBN,IAApB,CAA7B;AACAL,EAAAA,MAAM,CAACS,EAAP,CAAU,oBAAV,EAAgCO,WAAW,CAACL,IAAZ,CAAiB,IAAjB,EAAuBL,EAAvB,CAAhC;AACAN,EAAAA,MAAM,CAACS,EAAP,CAAU,iBAAV,EAA6BQ,QAAQ,CAACN,IAAT,CAAc,IAAd,EAAoBN,IAApB,CAA7B;AACAL,EAAAA,MAAM,CAACS,EAAP,CAAU,uBAAV,EAAmCS,aAAa,CAACP,IAAd,CAAmB,IAAnB,EAAyBN,IAAzB,CAAnC;AACA;;AAED,SAASc,UAAT,GAAqB;AACpB,MAAIC,QAAQ,GAAG,CAAC,gBAAD,CAAf;AACG,MAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,QAAQ,CAACK,MAApC,CAAR;AACA,SAAOL,QAAQ,CAACC,CAAD,CAAf;AACH;;AAED,SAASH,aAAT,CAAuBb,IAAvB,EAA6BqB,IAA7B,EAAkC;AACjCrB,EAAAA,IAAI,CAACsB,KAAL,CAAWT,aAAX,CAAyBC,UAAU,EAAnC;AACA;;AAED,SAASS,iBAAT,CAA2BF,IAA3B,EAAiCrB,IAAjC,EAAsC;AACrCwB,EAAAA,IAAI,CAAC,qBAAD,EAAwBH,IAAxB,CAAJ;AACArB,EAAAA,IAAI,CAACsB,KAAL,CAAWG,WAAX;AACA;;AAED,SAAShB,QAAT,CAAkBT,IAAlB,EAAuB;AACtBA,EAAAA,IAAI,CAACsB,KAAL,CAAWI,IAAX,CAAgB,YAAhB;AACA;;AAED,SAAShB,QAAT,CAAkBV,IAAlB,EAAuB;AACtBA,EAAAA,IAAI,CAACsB,KAAL,CAAWI,IAAX,CAAgB,iBAAhB;AACA;;AAED,SAASd,QAAT,CAAkBZ,IAAlB,EAAwBqB,IAAxB,EAA6B;AAC5BrB,EAAAA,IAAI,CAACsB,KAAL,CAAWK,WAAX,CAAuB,IAAvB,EAA6BN,IAA7B,EAD4B,CAE5B;AACA;;AAGD,SAAShB,kBAAT,CAA4BL,IAA5B,EAAkCqB,IAAlC,EAAuC;AACtCrB,EAAAA,IAAI,CAACsB,KAAL,CAAWM,aAAX,CAAyBP,IAAI,CAACQ,MAA9B;AACA7B,EAAAA,IAAI,CAACsB,KAAL,CAAWQ,eAAX,CAA2BT,IAAI,CAACU,YAAhC;AACA;;AACD,SAASxB,gBAAT,GAA2B,CAE1B;;AAED,SAASyB,eAAT,CAAyBC,MAAzB,EAAiCjC,IAAjC,EAAsC;AACrC,MAAIA,IAAI,CAACsB,KAAL,CAAWY,IAAf,EAAoB;AACnB,QAAIb,IAAI,GAAG;AACVa,MAAAA,IAAI,EAAElC,IAAI,CAACsB,KAAL,CAAWY,IAAX,CAAgBC,IADZ;AAEVF,MAAAA,MAAM,EAAEA;AAFE,KAAX;AAIAT,IAAAA,IAAI,CAAC,0BAAD,EAA6BH,IAA7B,CAAJ;AACA;AACD;;AAED,SAASV,WAAT,CAAqBV,EAArB,EAAwB;AACvBA,EAAAA,EAAE,CAAC,aAAD,EAAgB,KAAhB,CAAF;AACA;;AAED,SAASmC,eAAT,CAAyBpC,IAAzB,EAA8B;AAC7BA,EAAAA,IAAI,CAACsB,KAAL,CAAWe,SAAX;AACAb,EAAAA,IAAI,CAAC,kBAAD,EAAqBxB,IAAI,CAACsB,KAAL,CAAWY,IAAX,CAAgBC,IAArC,CAAJ;AACA;;AAED,SAASG,cAAT,CAAwBtC,IAAxB,EAA6B;AAC5BA,EAAAA,IAAI,CAACsB,KAAL,CAAWe,SAAX;AACAb,EAAAA,IAAI,CAAC,wBAAD,EAA2BxB,IAAI,CAACsB,KAAL,CAAWY,IAAX,CAAgBC,IAA3C,CAAJ;AACA;;AAED,SAASI,iBAAT,CAA2BvC,IAA3B,EAAgC;AAC/BwB,EAAAA,IAAI,CAAC,oBAAD,EAAuBxB,IAAI,CAACsB,KAAL,CAAWY,IAAX,CAAgBC,IAAvC,CAAJ;AACAnC,EAAAA,IAAI,CAACsB,KAAL,CAAWK,WAAX,CAAuB,KAAvB;AACA;;AAED,SAASnB,WAAT,CAAqBP,EAArB,EAAwB;AACvBA,EAAAA,EAAE,CAAC,WAAD,EAAc,KAAd,CAAF;AACA;;AAED,SAASuC,QAAT,CAAkBnB,IAAlB,EAAwBrB,IAAxB,EAA6B;AAC5BqB,EAAAA,IAAI,CAACoB,EAAL,GAAU9C,MAAM,CAAC8C,EAAjB;AACAzC,EAAAA,IAAI,CAACsB,KAAL,CAAWoB,OAAX,CAAmBrB,IAAnB;AACAG,EAAAA,IAAI,CAAC,wBAAD,EAA2BH,IAA3B,CAAJ;AACA;;AAED,SAASG,IAAT,CAAcmB,MAAd,EAAsBtB,IAAtB,EAA2B;AAC1B1B,EAAAA,MAAM,CAAC6B,IAAP,CAAYmB,MAAZ,EAAoBtB,IAApB;AACA;;AAED,SACCE,iBADD,EAECgB,iBAFD,EAGCD,cAHD,EAICF,eAJD,EAKCJ,eALD,EAMCjC,uBAND,EAOCyC,QAPD","sourcesContent":["import openSocket from 'socket.io-client';\nimport localSetup from 'config/local'\nconst socket = localSetup.isLocal ? openSocket(localSetup.localServer + ':9000') : openSocket(localSetup.publicServer)\n\nfunction subscribeToPlayerEvents(self, cb) {\n\tconsole.log('SUBSCRIBING TO PLAYER')\n\tsocket.on('pingp-success-joining-room', successJoiningRoom.bind(this, self))\n\tsocket.on('pingp-error-joining-room', errorJoiningRoom.bind(this))\n\tsocket.on('pingp-start-game', gameStarted.bind(this, cb))\n\tsocket.on('pingp-room-full', roomFull.bind(this, self))\n\tsocket.on('pingp-host-quit', hostQuit.bind(this, self))\n\tsocket.on('pingp-restart-game', restartGame.bind(this, cb))\n\tsocket.on('pingp-game-over', gameOver.bind(this, self))\n\tsocket.on('pingp-power-up-gained', powerUpGained.bind(this, self))\n}\n\nfunction getPowerup(){\n\tlet powerups = ['invertOpponent']\n    let r = Math.floor(Math.random() * powerups.length)\n    return powerups[r]\n}\n\nfunction powerUpGained(self, data){\n\tself.props.powerUpGained(getPowerup())\n}\n\nfunction powerUpUsedSocket(data, self){\t\n\temit('pingp-power-up-used', data)\n\tself.props.powerUpUsed()\n}\n\nfunction roomFull(self){\n\tself.props.push('pingp/full')\n}\n\nfunction hostQuit(self){\n\tself.props.push('pingp/not-found')\n}\n\nfunction gameOver(self, data){\n\tself.props.setGameOver(true, data)\n\t// cb('setGameOver', true)\n}\n\n\nfunction successJoiningRoom(self, data){\n\tself.props.setPlayerRoom(data.result)\n\tself.props.setPlayerNumber(data.playerNumber)\n}\nfunction errorJoiningRoom(){\n\n}\n\nfunction sendOrientation(coords, self){\n\tif (self.props.room){\n\t\tlet data = {\n\t\t\troom: self.props.room.long,\n\t\t\tcoords: coords\n\t\t}\n\t\temit('pingp-device-orientation', data)\n\t}\n}\n\nfunction restartGame(cb){\n\tcb('setGameOver', false)\n}\n\nfunction startGameSocket(self){\t\n\tself.props.startGame()\n\temit('pingp-start-game', self.props.room.long)\n}\n\nfunction quitGameSocket(self){\n\tself.props.startGame()\n\temit('pingp-quit-game-player', self.props.room.long)\n}\n\nfunction restartGameSocket(self){\n\temit('pingp-restart-game', self.props.room.long)\n\tself.props.setGameOver(false)\t\n}\n\nfunction gameStarted(cb){\n\tcb('startGame', false)\n}\n\nfunction joinRoom(data, self){\n\tdata.id = socket.id\n\tself.props.setSelf(data)\n\temit('pingp-player-join-room', data)\n}\n\nfunction emit(action, data){\n\tsocket.emit(action, data)\n}\n\nexport { \n\tpowerUpUsedSocket,\n\trestartGameSocket,\n\tquitGameSocket,\n\tstartGameSocket,\n\tsendOrientation,\n\tsubscribeToPlayerEvents,\n\tjoinRoom,\n};"]},"metadata":{},"sourceType":"module"}