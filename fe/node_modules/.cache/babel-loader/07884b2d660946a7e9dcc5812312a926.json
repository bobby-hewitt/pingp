{"ast":null,"code":"import openSocket from 'socket.io-client';\nimport localSetup from 'config/local';\n\nfunction subscribeToPlayerEvents(self, socket, cb) {\n  console.log('SUBSCRIBING TO PLAYER');\n  socket.on('success-joining-room', successJoiningRoom.bind(this, self));\n  socket.on('error-joining-room', errorJoiningRoom.bind(this, socket));\n  socket.on('room-full', roomFull.bind(this, self, socket));\n  socket.on('host-quit', hostQuit.bind(this, self, socket));\n  socket.on('chosen-game', chosenGame.bind(this, self, socket));\n} //sent to socket\n\n\nfunction chooseGame(data, socket) {\n  console.log(data, socket.emit);\n  emit('choose-game', data, socket);\n} //recieved from socket\n\n\nfunction chosenGame(self, socket, data) {\n  console.log(data);\n  self.props.push('m/' + data);\n}\n\nfunction joinRoom(data, self, socket) {\n  data.id = socket.id;\n  emit('player-join-room', data, socket);\n}\n\nfunction successJoiningRoom(self, data, info) {\n  // self.props.setPlayerRoom(data.result)\n  // self.props.setPlayerNumber(data.playerNumber)\n  self.props.setPlayerData(data);\n  self.props.push('m/home');\n}\n\nfunction errorJoiningRoom() {}\n\nfunction roomFull(self) {\n  self.props.push('pingp/full');\n}\n\nfunction hostQuit(self) {\n  self.props.push('pingp/not-found');\n}\n\nfunction gameOver(self, data) {\n  self.props.setGameOver(true, data); // cb('setGameOver', true)\n}\n\nfunction emit(action, data, socket) {\n  socket.emit(action, data);\n}\n\nexport { chooseGame, powerUpUsedSocket, restartGameSocket, quitGameSocket, startGameSocket, sendOrientation, subscribeToPlayerEvents, joinRoom };","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/sockets/player.js"],"names":["openSocket","localSetup","subscribeToPlayerEvents","self","socket","cb","console","log","on","successJoiningRoom","bind","errorJoiningRoom","roomFull","hostQuit","chosenGame","chooseGame","data","emit","props","push","joinRoom","id","info","setPlayerData","gameOver","setGameOver","action","powerUpUsedSocket","restartGameSocket","quitGameSocket","startGameSocket","sendOrientation"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,SAASC,uBAAT,CAAiCC,IAAjC,EAAuCC,MAAvC,EAA+CC,EAA/C,EAAmD;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAH,EAAAA,MAAM,CAACI,EAAP,CAAU,sBAAV,EAAkCC,kBAAkB,CAACC,IAAnB,CAAwB,IAAxB,EAA8BP,IAA9B,CAAlC;AACAC,EAAAA,MAAM,CAACI,EAAP,CAAU,oBAAV,EAAgCG,gBAAgB,CAACD,IAAjB,CAAsB,IAAtB,EAA4BN,MAA5B,CAAhC;AACAA,EAAAA,MAAM,CAACI,EAAP,CAAU,WAAV,EAAuBI,QAAQ,CAACF,IAAT,CAAc,IAAd,EAAoBP,IAApB,EAA0BC,MAA1B,CAAvB;AACAA,EAAAA,MAAM,CAACI,EAAP,CAAU,WAAV,EAAuBK,QAAQ,CAACH,IAAT,CAAc,IAAd,EAAoBP,IAApB,EAA0BC,MAA1B,CAAvB;AACAA,EAAAA,MAAM,CAACI,EAAP,CAAU,aAAV,EAAyBM,UAAU,CAACJ,IAAX,CAAgB,IAAhB,EAAsBP,IAAtB,EAA4BC,MAA5B,CAAzB;AACA,C,CAED;;;AACA,SAASW,UAAT,CAAoBC,IAApB,EAA0BZ,MAA1B,EAAiC;AAChCE,EAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ,EAAkBZ,MAAM,CAACa,IAAzB;AACAA,EAAAA,IAAI,CAAC,aAAD,EAAgBD,IAAhB,EAAsBZ,MAAtB,CAAJ;AACA,C,CAED;;;AACA,SAASU,UAAT,CAAoBX,IAApB,EAA0BC,MAA1B,EAAkCY,IAAlC,EAAuC;AACtCV,EAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACAb,EAAAA,IAAI,CAACe,KAAL,CAAWC,IAAX,CAAgB,OAAOH,IAAvB;AACA;;AAED,SAASI,QAAT,CAAkBJ,IAAlB,EAAwBb,IAAxB,EAA8BC,MAA9B,EAAqC;AACpCY,EAAAA,IAAI,CAACK,EAAL,GAAUjB,MAAM,CAACiB,EAAjB;AACAJ,EAAAA,IAAI,CAAC,kBAAD,EAAqBD,IAArB,EAA2BZ,MAA3B,CAAJ;AACA;;AAED,SAASK,kBAAT,CAA4BN,IAA5B,EAAkCa,IAAlC,EAAwCM,IAAxC,EAA6C;AAC5C;AACA;AACAnB,EAAAA,IAAI,CAACe,KAAL,CAAWK,aAAX,CAAyBP,IAAzB;AACAb,EAAAA,IAAI,CAACe,KAAL,CAAWC,IAAX,CAAgB,QAAhB;AACA;;AAED,SAASR,gBAAT,GAA2B,CAE1B;;AAED,SAASC,QAAT,CAAkBT,IAAlB,EAAuB;AACtBA,EAAAA,IAAI,CAACe,KAAL,CAAWC,IAAX,CAAgB,YAAhB;AACA;;AAED,SAASN,QAAT,CAAkBV,IAAlB,EAAuB;AACtBA,EAAAA,IAAI,CAACe,KAAL,CAAWC,IAAX,CAAgB,iBAAhB;AACA;;AAED,SAASK,QAAT,CAAkBrB,IAAlB,EAAwBa,IAAxB,EAA6B;AAC5Bb,EAAAA,IAAI,CAACe,KAAL,CAAWO,WAAX,CAAuB,IAAvB,EAA6BT,IAA7B,EAD4B,CAE5B;AACA;;AAKD,SAASC,IAAT,CAAcS,MAAd,EAAsBV,IAAtB,EAA4BZ,MAA5B,EAAmC;AAClCA,EAAAA,MAAM,CAACa,IAAP,CAAYS,MAAZ,EAAoBV,IAApB;AACA;;AAED,SACCD,UADD,EAECY,iBAFD,EAGCC,iBAHD,EAICC,cAJD,EAKCC,eALD,EAMCC,eAND,EAOC7B,uBAPD,EAQCkB,QARD","sourcesContent":["import openSocket from 'socket.io-client';\nimport localSetup from 'config/local'\n\n\nfunction subscribeToPlayerEvents(self, socket, cb) {\n\tconsole.log('SUBSCRIBING TO PLAYER')\n\tsocket.on('success-joining-room', successJoiningRoom.bind(this, self))\n\tsocket.on('error-joining-room', errorJoiningRoom.bind(this, socket))\n\tsocket.on('room-full', roomFull.bind(this, self, socket))\n\tsocket.on('host-quit', hostQuit.bind(this, self, socket))\n\tsocket.on('chosen-game', chosenGame.bind(this, self, socket))\n}\n\n//sent to socket\nfunction chooseGame(data, socket){\n\tconsole.log(data, socket.emit)\n\temit('choose-game', data, socket)\n}\n\n//recieved from socket\nfunction chosenGame(self, socket, data){\n\tconsole.log(data)\n\tself.props.push('m/' + data)\n}\n\nfunction joinRoom(data, self, socket){\n\tdata.id = socket.id\n\temit('player-join-room', data, socket)\n}\n\nfunction successJoiningRoom(self, data, info){\n\t// self.props.setPlayerRoom(data.result)\n\t// self.props.setPlayerNumber(data.playerNumber)\n\tself.props.setPlayerData(data)\n\tself.props.push('m/home')\n}\n\nfunction errorJoiningRoom(){\n\n}\n\nfunction roomFull(self){\n\tself.props.push('pingp/full')\n}\n\nfunction hostQuit(self){\n\tself.props.push('pingp/not-found')\n}\n\nfunction gameOver(self, data){\n\tself.props.setGameOver(true, data)\n\t// cb('setGameOver', true)\n}\n\n\n\n\nfunction emit(action, data, socket){\n\tsocket.emit(action, data)\n}\n\nexport { \n\tchooseGame,\n\tpowerUpUsedSocket,\n\trestartGameSocket,\n\tquitGameSocket,\n\tstartGameSocket,\n\tsendOrientation,\n\tsubscribeToPlayerEvents,\n\tjoinRoom,\n\n};"]},"metadata":{},"sourceType":"module"}