{"ast":null,"code":"import _classCallCheck from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bobby.hewitt/Documents/test/ops/fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bobby.hewitt/Documents/test/ops/fe/src/containers/Quiz/Host/index.js\";\nimport React, { Component } from 'react';\nimport { push as _push } from 'connected-react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { setupGame, showAnswer, showScores } from 'actions/quiz/host';\nimport SocketListener from 'containers/SocketListener/Quiz';\nimport { showQuestionSocket } from 'sockets/Quiz/host';\nimport { showQuestionHost } from 'actions/quiz/host';\nimport { updatePlayers } from 'actions/general/host';\nimport './style.scss';\nimport Question from './Question';\nimport PlayerResponse from './PlayerResponse';\n\nvar QuizHost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizHost, _Component);\n\n  function QuizHost(props) {\n    var _this;\n\n    _classCallCheck(this, QuizHost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizHost).call(this, props));\n    _this.timeouts = {};\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(QuizHost, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setupGame();\n    }\n  }, {\n    key: \"getNumberOfTruthies\",\n    value: function getNumberOfTruthies(array) {\n      var count = 0;\n\n      for (var i = 0; i < array.length; i++) {\n        if (array[i]) count += 1;\n      }\n\n      return count;\n    }\n  }, {\n    key: \"compareResponsesToPlayers\",\n    value: function compareResponsesToPlayers() {\n      var players = this.props.players.length;\n      var responses = this.props.responses;\n      var allPlayersHaveResponded = true;\n\n      for (var i = 0; i < players.length; i++) {\n        if (players[i]) {\n          var hasResponded = responses.find(function (r) {\n            return r.id === players[i].id;\n          });\n\n          if (!hasResponded) {\n            allPlayersHaveResponded = false;\n          }\n        }\n      }\n\n      if (allPlayersHaveResponded) {\n        console.log('All responses recieved ');\n        this.calculateScores();\n      } else {\n        console.log('Not recieved all responses');\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(np) {\n      if (this.props.responses.length !== np.responses.length) {\n        //check to see if all active players have responded\n        this.compareResponsesToPlayers();\n      }\n    }\n  }, {\n    key: \"shuffle\",\n    value: function shuffle(array) {\n      var currentIndex = array.length,\n          temporaryValue,\n          randomIndex;\n\n      while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    }\n  }, {\n    key: \"setupGame\",\n    value: function setupGame() {\n      var _this2 = this;\n\n      fetch('https://opentdb.com/api.php?amount=10&type=multiple').then(function (resp) {\n        return resp.json();\n      }).then(function (data) {\n        //reset scores\n        for (var i = 0; i < _this2.props.players.length; i++) {\n          if (_this2.props.players[i]) _this2.props.players[i].score = 0;\n        }\n\n        _this2.props.updatePlayers(_this2.props.players);\n\n        console.log(_this2.props.players); //shuffle incorrect and correct answers together and note the position of correct answer\n\n        for (var _i = 0; _i < data.results.length; _i++) {\n          var q = data.results[_i];\n          q.all_answers = q.incorrect_answers;\n          q.all_answers.push(q.correct_answer);\n          q.all_answers = _this2.shuffle(q.all_answers);\n          q.correct_index = q.all_answers.indexOf(q.correct_answer);\n        }\n\n        _this2.props.setupGame({\n          questions: data.results\n        });\n\n        _this2.intro();\n      }).catch(function (err) {\n        console.log('error fetchi9ng data', err);\n      });\n    }\n  }, {\n    key: \"intro\",\n    value: function intro() {\n      this.showQuestion();\n    }\n  }, {\n    key: \"showQuestion\",\n    value: function showQuestion() {\n      showQuestionSocket(this, this.props.socket);\n    }\n  }, {\n    key: \"showAnswer\",\n    value: function showAnswer() {\n      this.props.showAnswer();\n    }\n  }, {\n    key: \"calculateScores\",\n    value: function calculateScores() {\n      var players = this.props.players;\n      var responses = this.props.responses;\n      var startTime = this.props.startTime;\n      var foundFirstCorrectAnswer = false;\n\n      for (var i = 0; i < responses.length; i++) {\n        console.log('looping responses');\n\n        if (responses[i].correct) {\n          console.log('CORRECT');\n\n          for (var j = 0; j < players.length; j++) {\n            console.log('looping players');\n\n            if (players[j] && responses[i].id === players[j].id) {\n              players[j].score += 100;\n\n              if (!foundFirstCorrectAnswer) {\n                players[j].score += 50;\n                foundFirstCorrectAnswer = true;\n              }\n            }\n          }\n        } else {\n          console.log('false');\n        }\n      }\n\n      console.log('updated players', players);\n      this.props.updatePlayers(players);\n    }\n  }, {\n    key: \"showScores\",\n    value: function showScores() {\n      this.props.showScores(); //move to next question index.\n      //reset timings\n      //reset responses\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var currentQuestion = this.props.currentQuestion;\n      return React.createElement(\"div\", {\n        className: \"quizHostContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(SocketListener, {\n        isHost: true,\n        socket: this.props.socket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), this.props.quizState === 'break' && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Break\"), this.props.quizState === 'question' && React.createElement(\"div\", {\n        className: \"sceneContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Question, {\n        question: currentQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"responsesContainerHost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.props.players && this.props.players.map(function (player, i) {\n        if (player) {\n          return React.createElement(PlayerResponse, Object.assign({\n            key: i,\n            response: _this3.props.responses.find(function (r) {\n              return r.id === player.id;\n            })\n          }, player, {\n            quizState: _this3.props.quizState,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }));\n        } else {\n          return React.createElement(\"div\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          });\n        }\n      }))), this.props.quizState === 'answer' && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Answer\"), this.props.quizState === 'end' && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"End\"));\n    }\n  }]);\n\n  return QuizHost;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    room: state.generalHost.room,\n    startTime: state.quizHost.startTime,\n    players: state.generalHost.players,\n    router: state.router,\n    responses: state.quizHost.responses,\n    quizPlayers: state.quizHost.players,\n    currentQuestion: state.quizHost.currentQuestion,\n    quizState: state.quizHost.quizState\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    push: function push(path) {\n      return _push(path);\n    },\n    setupGame: setupGame,\n    updatePlayers: updatePlayers,\n    showAnswer: showAnswer,\n    showQuestionHost: showQuestionHost,\n    showScores: showScores\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizHost);","map":{"version":3,"sources":["/Users/bobby.hewitt/Documents/test/ops/fe/src/containers/Quiz/Host/index.js"],"names":["React","Component","push","bindActionCreators","connect","setupGame","showAnswer","showScores","SocketListener","showQuestionSocket","showQuestionHost","updatePlayers","Question","PlayerResponse","QuizHost","props","timeouts","state","array","count","i","length","players","responses","allPlayersHaveResponded","hasResponded","find","r","id","console","log","calculateScores","np","compareResponsesToPlayers","currentIndex","temporaryValue","randomIndex","Math","floor","random","fetch","then","resp","json","data","score","results","q","all_answers","incorrect_answers","correct_answer","shuffle","correct_index","indexOf","questions","intro","catch","err","showQuestion","socket","startTime","foundFirstCorrectAnswer","correct","j","currentQuestion","quizState","map","player","mapStateToProps","room","generalHost","quizHost","router","quizPlayers","mapDispatchToProps","dispatch","path"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { setupGame, showAnswer, showScores } from 'actions/quiz/host'\nimport SocketListener from 'containers/SocketListener/Quiz'\nimport { showQuestionSocket } from 'sockets/Quiz/host'\nimport { showQuestionHost } from 'actions/quiz/host'\nimport { updatePlayers } from 'actions/general/host'\nimport './style.scss'\nimport Question from './Question'\nimport PlayerResponse from './PlayerResponse'\nclass QuizHost extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.timeouts = {\n\n\t\t}\n\t\tthis.state = {\n\n\t\t}\n\t}\n\n\tcomponentWillMount(){\n\t\tthis.setupGame()\n\t}\n\n\tgetNumberOfTruthies(array){\n\t\tlet count = 0\n\t\tfor (var i = 0; i < array.length; i++){\n\t\t\tif(array[i]) count += 1\n\t\t}\n\t\treturn count\n\t}\n\n\n\n\tcompareResponsesToPlayers(){\n\t\tlet players = this.props.players.length;\n\t\tlet responses = this.props.responses\n\t\tlet allPlayersHaveResponded = true;\n\t\tfor (var i = 0; i < players.length; i++){\n\t\t\tif (players[i]){\n\t\t\t\tlet hasResponded = responses.find(r => r.id === players[i].id)\n\t\t\t\tif (!hasResponded){\n\t\t\t\t\tallPlayersHaveResponded = false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (allPlayersHaveResponded){\n\t\t\tconsole.log('All responses recieved ')\n\t\t\tthis.calculateScores()\n\t\t} else {\n\t\t\tconsole.log('Not recieved all responses')\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(np){\n\t\tif (this.props.responses.length !== np.responses.length){\n\t\t\t//check to see if all active players have responded\n\t\t\tthis.compareResponsesToPlayers()\n\t\t}\n\t}\n\n\tshuffle(array) {\n\t  var currentIndex = array.length, temporaryValue, randomIndex;\n\t  while (0 !== currentIndex) {\n\t    randomIndex = Math.floor(Math.random() * currentIndex);\n\t    currentIndex -= 1;\n\t    temporaryValue = array[currentIndex];\n\t    array[currentIndex] = array[randomIndex];\n\t    array[randomIndex] = temporaryValue;\n\t  }\n\t  return array;\n\t}\n\n\tsetupGame(){\n\t\tfetch('https://opentdb.com/api.php?amount=10&type=multiple')\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((data) => {\n\t\t\t//reset scores\n\t\t\tfor (var i = 0; i < this.props.players.length; i++){\n\t\t\t\tif (this.props.players[i])this.props.players[i].score = 0\n\t\t\t\t\n\t\t\t\n\t\t\t}\n\t\t\tthis.props.updatePlayers(this.props.players)\n\t\t\tconsole.log(this.props.players)\n\t\t\t//shuffle incorrect and correct answers together and note the position of correct answer\n\t\t\tfor (let i = 0; i < data.results.length; i++){\n\t\t\t\tlet q = data.results[i]\n\t\t\t\tq.all_answers = q.incorrect_answers\n\t\t\t\tq.all_answers.push(q.correct_answer) \n\t\t\t\tq.all_answers = this.shuffle(q.all_answers)\n\t\t\t\tq.correct_index = q.all_answers.indexOf(q.correct_answer)\n\t\t\t}\n\t\t\tthis.props.setupGame({questions: data.results})\n\t\t\tthis.intro()\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log('error fetchi9ng data', err)\n\t\t})\n\t}\n\n\tintro(){\t\n\t\tthis.showQuestion()\n\t}\n\n\tshowQuestion(){\n\t\tshowQuestionSocket(this, this.props.socket)\n\t}\n\n\tshowAnswer(){\n\t\tthis.props.showAnswer()\n\t}\n\n\tcalculateScores(){\n\n\n\t\tlet players = this.props.players\n\t\tlet responses = this.props.responses \n\t\tlet startTime = this.props.startTime\n\t\tlet foundFirstCorrectAnswer = false\n\n\n\t\tfor (var i = 0; i < responses.length; i++){\n\t\t\tconsole.log('looping responses')\n\t\t\tif (responses[i].correct){\n\t\t\t\tconsole.log('CORRECT')\n\t\t\t\tfor (var j = 0; j < players.length; j++){\n\t\t\t\t\tconsole.log('looping players')\n\t\t\t\t\tif (players[j] && responses[i].id === players[j].id){\n\t\t\t\t\t\tplayers[j].score += 100\n\t\t\t\t\t\tif (!foundFirstCorrectAnswer){\n\t\t\t\t\t\t\tplayers[j].score += 50\n\t\t\t\t\t\t\tfoundFirstCorrectAnswer = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('false')\n\t\t\t}\n\t\t}\n\t\tconsole.log('updated players', players)\n\t\tthis.props.updatePlayers(players)\n\n\n\t}\n\n\tshowScores(){\n\t\tthis.props.showScores()\n\t\t//move to next question index.\n\t\t//reset timings\n\t\t//reset responses\n\t}\n\n\n\n\n\n\n\n\trender(){\n\t\tconst { currentQuestion } = this.props\n\n\t\treturn(\n\t\t\t<div className=\"quizHostContainer\">\n\t\t\t<SocketListener isHost socket={this.props.socket} />\n\t\t\t\t{this.props.quizState === 'break' &&\n\t\t\t\t\t<p>Break</p>\n\t\t\t\t}\n\t\t\t\t{this.props.quizState === 'question' &&\n\t\t\t\t\t<div className=\"sceneContainer\">\n\t\t\t\t\t<Question question={currentQuestion}/>\n\t\t\t\t\t<div className=\"responsesContainerHost\">\n\t\t\t\t\t\t{this.props.players && this.props.players.map((player, i) => {\n\t\t\t\t\t\t\tif (player){\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<PlayerResponse key={i} response={this.props.responses.find(r => r.id === player.id)} {...player} quizState={this.props.quizState}/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<div key={i}/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{this.props.quizState === 'answer' &&\n\t\t\t\t\t<p>Answer</p>\n\t\t\t\t}\n\t\t\t\t{this.props.quizState === 'end' &&\n\t\t\t\t\t<p>End</p>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nconst mapStateToProps = state => ({\n\troom: state.generalHost.room,\n\tstartTime: state.quizHost.startTime,\n\tplayers: state.generalHost.players,\n\trouter: state.router,\n\tresponses: state.quizHost.responses,\n\tquizPlayers: state.quizHost.players,\n\tcurrentQuestion: state.quizHost.currentQuestion,\n\tquizState: state.quizHost.quizState,\n\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  push: (path) => push(path),\n  setupGame,\n  updatePlayers,\n  showAnswer,\n  showQuestionHost,\n  showScores,\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuizHost)"]},"metadata":{},"sourceType":"module"}